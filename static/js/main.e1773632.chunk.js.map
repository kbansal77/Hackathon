{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/login/LogIn.jsx","components/navbar/navbar.jsx","pages/createMail/createMail.jsx","pages/editMail/editMail.jsx","images/mail.png","pages/landingPage/Landing.jsx","pages/dashboard/dashboard.jsx","App.js","reportWebVitals.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useHistory","useState","currentUser","setCurrentUser","error","setError","loading","setLoading","displayName","setDisplayName","email","a","fetch","response","json","data","user","useEffect","onAuthStateChanged","console","log","value","Gsignup","provider","GoogleAuthProvider","signInWithPopup","then","result","additionalUserInfo","isNewUser","name","sdata","_id","method","body","JSON","stringify","headers","catch","err","addUserDetails","emailLogin","password","signInWithEmailAndPassword","getusername","emailSignup","createUserWithEmailAndPassword","logout","signOut","Provider","Modal","setAppElement","makeStyles","theme","form","width","marginTop","submit","margin","spacing","backgroundColor","root","flexGrow","boxShadow","Navbar","page","history","Container","Grid","container","id","item","lg","sm","xs","onClick","push","style","cursor","Button","variant","href","e","preventDefault","dates","months","useStyles","display","flexWrap","listStyle","padding","chip","textField","marginLeft","marginRight","weeks","CreateMail","classes","modalIsOpen","setIsOpen","type","setType","daySelected","setDaySelected","dateSelected","setDateSelected","monthSelected","setMonthSelected","timeSelected","setTimeSelected","tovalue","setToValue","tochip","setToChip","ccvalue","setCcValue","ccchip","setCcChip","bccvalue","setBccValue","bccchip","setBccChip","toRef","useRef","ccRef","bccRef","subRef","bodyRef","isValid","isInList","test","isEmail","includes","selectday","event","currentTarget","selectTime","target","selectDate","openModal","closeModal","addMail","subject","current","trim","alert","maildata","message","Card","textAlign","paddingBottom","className","map","chipToDelete","Chip","icon","label","onDelete","chips","filter","Input","inputRef","placeholder","onKeyDown","key","onChange","onPaste","emails","clipboardData","getData","match","toBeAdded","ccBeAdded","bccBeAdded","multiline","rows","color","fontSize","isOpen","onRequestClose","contentLabel","overlayClassName","Select","labelId","MenuItem","justify","day","TextField","defaultValue","InputLabelProps","shrink","inputProps","step","date","month","EditMail","props","location","state","time","to","cc","bcc","setSubject","setBody","mailId","editMail","TabPanel","index","other","role","hidden","aria-labelledby","Box","p","Typography","a11yProps","Landing","pass","setPass","setEmail","setName","setValue","clickhandler","Echange","Pchange","addUserDetail","endIcon","src","mail","height","alt","fixed","IconButton","aria-label","AppBar","position","Tabs","newValue","indicatorColor","textColor","centered","Tab","noValidate","required","fullWidth","autoComplete","autoFocus","class","LinkTab","component","Dashboard","open","setOpen","selectedId","setSelectedId","isLoading","setIsLoading","mails","setMails","handleClick","delMail","paddingT","List","ListItem","button","ListItemText","secondary","Fragment","rec","Collapse","in","timeout","unmountOnExit","disablePadding","pathname","last_sent","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0XAeQA,G,cAAMC,IAASC,cAVF,CACjBC,OAAQ,0CACRC,WAAY,gCACZC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,gBACnBC,MAAO,6CACPC,cAAe,kBAKJC,EAAOV,EAAIU,O,gBCXpBC,EAAcC,IAAMC,gBAEnB,SAASC,IACd,OAAOC,qBAAWJ,GAuBb,SAASK,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SAE7B,GADgBC,cACsBC,sBAAtC,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAsCN,mBAAS,IAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KALyC,4CAOzC,WAA2BC,GAA3B,iBAAAC,EAAA,sEACuBC,MAAM,yCAAD,OAA0CF,IADtE,cACMG,EADN,gBAEmBA,EAASC,OAF5B,OAEMC,EAFN,OAGEN,EAAeM,EAAKC,KAAKR,aAH3B,4CAPyC,sBAmDzCS,qBAAU,WASR,OARoBzB,EAAK0B,oBAAmB,SAACF,GAC3Cb,EAAea,GACfG,QAAQC,IAAIJ,GACZT,GAAW,QAMZ,IACHY,QAAQC,IAAIZ,GACZ,IAAMa,EAAQ,CACZnB,cACAoB,QAnDF,WACE,IAAIC,EAAW,IAAIxC,IAASS,KAAKgC,mBAEjC,OAAOzC,IACJS,OACAiC,gBAAgBF,GAChBG,MAAK,SAACC,GACL,IAAIX,EAAOW,EAAOX,KAClBP,EAAeO,EAAKR,aAChBmB,EAAOC,mBAAmBC,WA3CtC,SAAwBC,EAAMpB,GAC5B,IAAMqB,EAAQ,CACZC,IAAKtB,EACLF,YAAasB,GAEflB,MAAM,8CAA+C,CACnDqB,OAAQ,OACRC,KAAMC,KAAKC,UAAUL,GACrBM,QAAS,CACP,eAAgB,sBAEjBC,OAAM,SAACC,GACRpB,QAAQC,IAAImB,MAgCNC,CAAexB,EAAKR,YAAaQ,EAAKN,UAEvCgB,MAAK,WACNrB,EAAS,QAuCboC,WA/BF,SAAoB/B,EAAOgC,GACzB,OAAOlD,EACJmD,2BAA2BjC,EAAOgC,GAClChB,MAAK,YAtC+B,oCAuCnCkB,CAAYlC,GACZL,EAAS,OAEViC,OAAM,SAACC,GACNlC,EAAS,iCAwBbwC,YApCF,SAAqBnC,EAAOgC,GAC1B,OAAOlD,EAAKsD,+BAA+BpC,EAAOgC,IAoClDtC,QACA2C,OAtBF,WACE,OAAOvD,EAAKwD,WAsBZxC,eAGF,OACE,cAACf,EAAYwD,SAAb,CAAsB5B,MAAOA,EAA7B,UACIf,GAAWP,I,2KCvFnBmD,IAAMC,cAAc,SAmCFC,aAAW,SAACC,GAAD,MAAY,CAErCC,KAAM,CACFC,MAAO,OACPC,UAAW,SAEfC,OAAQ,CACJC,OAAQL,EAAMM,QAAQ,EAAG,EAAG,GAC5BC,gBAAiB,WAErBC,KAAM,CACFC,SAAU,EACVN,UAAW,OACXI,gBAAiB,QACjBG,UAAW,Y,OAdnB,I,4DCHeC,MA5Cf,YAAyB,IAARC,EAAO,EAAPA,KACPC,EAAUlE,cAChB,EAA+BJ,IAAvBM,EAAR,EAAQA,YAAY6C,EAApB,EAAoBA,OAOpB,OACI,cAACoB,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,GAAG,MAAnB,UACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA7B,SACI,sBAAMC,QAAS,WAAKT,EAAQU,KAAK,eAAgBN,GAAG,UAAUO,MAAO,CAACC,OAAO,WAA7E,uBAII,aAANb,EACF,cAACG,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA7B,SACI,cAACK,EAAA,EAAD,CAAQC,QAAQ,YAAYV,GAAG,aAAaW,KAAK,cAAjD,4BAIJ,cAACb,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAG5BxE,EACG,cAACkE,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA7B,SACI,cAACK,EAAA,EAAD,CAAQC,QAAQ,WAAWV,GAAG,YAAYK,QAzB9D,SAAsBO,GAClBA,EAAEC,iBACFpC,IACAmB,EAAQU,KAAK,MAsBG,sBAKJ,cAACR,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,U,OCvBnCxB,IAAMC,cAAc,SAEpB,IAAMiC,EAAQ,CACZ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAGIC,EAAS,CACb,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAGIC,EAAYlC,aAAW,SAACC,GAAD,MAAY,CACvCQ,KAAM,CACJ0B,QAAS,OACTC,SAAU,OACVC,UAAW,OACXC,QAASrC,EAAMM,QAAQ,IACvBD,OAAQ,GAEViC,KAAM,CACJjC,OAAQL,EAAMM,QAAQ,KAExBU,UAAW,CACTkB,QAAS,OACTC,SAAU,QAEZI,UAAW,CACTC,WAAYxC,EAAMM,QAAQ,GAC1BmC,YAAazC,EAAMM,QAAQ,GAC3BJ,MAAO,SAILwC,EAAQ,CACZ,SACA,UACA,YACA,WACA,SACA,WACA,UAqzBaC,MAlzBf,WACE,IAAMC,EAAUX,IAEhB,EAAiC5F,IAAMO,UAAS,GAAhD,mBAAOiG,EAAP,KAAoBC,EAApB,KACA,EAAqCvG,IAA7BM,EAAR,EAAQA,YAAaM,EAArB,EAAqBA,YACf0D,EAAUlE,cAChB,EAAwBN,IAAMO,SAAS,IAAvC,mBAAOmG,EAAP,KAAaC,EAAb,KACA,EAAsC3G,IAAMO,SAAS,IAArD,mBAAOqG,EAAP,KAAoBC,EAApB,KACA,EAAwC7G,IAAMO,SAAS,IAAvD,mBAAOuG,EAAP,KAAqBC,EAArB,KACA,EAA0C/G,IAAMO,SAAS,IAAzD,mBAAOyG,EAAP,KAAsBC,EAAtB,KACA,EAAwCjH,IAAMO,SAAS,IAAvD,mBAAO2G,EAAP,KAAqBC,EAArB,KACA,EAA8BnH,IAAMO,SAAS,IAA7C,mBAAO6G,EAAP,KAAgBC,EAAhB,KACA,GAA4BrH,IAAMO,SAAS,IAA3C,qBAAO+G,GAAP,MAAeC,GAAf,MACA,GAA8BvH,IAAMO,SAAS,IAA7C,qBAAOiH,GAAP,MAAgBC,GAAhB,MACA,GAA4BzH,IAAMO,SAAS,IAA3C,qBAAOmH,GAAP,MAAeC,GAAf,MACA,GAAgC3H,IAAMO,SAAS,IAA/C,qBAAOqH,GAAP,MAAiBC,GAAjB,MACA,GAA8B7H,IAAMO,SAAS,IAA7C,qBAAOuH,GAAP,MAAgBC,GAAhB,MACA,GAAwB/H,IAAMO,SAAS,IAAvC,qBACMyH,IADN,YACchI,IAAMiI,OAAO,KACrBC,GAAQlI,IAAMiI,OAAO,IACrBE,GAASnI,IAAMiI,OAAO,IACtBG,GAASpI,IAAMiI,OAAO,IACtBI,GAAUrI,IAAMiI,OAAO,IAG7B,SAASK,GAAQtH,GACf,IAAIN,EAAQ,KAUZ,OARI6H,GAASvH,KACXN,EAAK,UAAMM,EAAN,6BAgCT,SAAiBA,GACf,MAAO,oCAAoCwH,KAAKxH,GA9B3CyH,CAAQzH,KACXN,EAAK,UAAMM,EAAN,oCAGHN,EAQN,SAAS6H,GAASvH,GAEhB,QAAIsG,GAAOoB,SAAS1H,OAGX0G,GAAOgB,SAAS1H,MAGhB8G,GAAQY,SAAS1H,IA7B5BS,QAAQC,IAAIZ,GAmBZW,QAAQC,IAAI4F,IAuBZ,IAAMqB,GAAY,SAACC,GAEbhC,IAAgBgC,EAAMC,cAAcjE,GACtCiC,EAAe,IAEfA,EAAe+B,EAAMC,cAAcjE,KAwFjCkE,GAAa,SAACF,GAClBzB,EAAgByB,EAAMG,OAAOpH,QAGzBqH,GAAa,SAACJ,GACd9B,IAAiB8B,EAAMG,OAAOpH,MAChCoF,EAAgB,IAEhBA,EAAgB6B,EAAMG,OAAOpH,QAkBjC,SAASsH,KACPxC,GAAU,GAEZ,SAASyC,KACPzC,GAAU,GAZZhF,QAAQC,IAAIwF,GACZzF,QAAQC,IAAIoF,GACZrF,QAAQC,IAAIkF,GACZnF,QAAQC,IAAIsF,GAYZ,IAaMmC,GAAU,WACd,IAAIC,EAAUhB,GAAOiB,QAAQ1H,MAAM2H,OAC/B9G,EAAO6F,GAAQgB,QAAQ1H,MAAM2H,OACjC,GAAe,IAAXF,GAAyB,IAAR5G,EACnB+G,MAAM,oCACD,CAEL,IAAMC,EAAW,CACf,GAAMlC,GACN,GAAMI,GACN,IAAOI,GACP,QAAWsB,EACX,KAAQ5G,EACR,IAAOoE,EACP,KAAQE,EACR,KAAQI,EACR,MAASF,EACT,KAAQN,EACR,OAAUlG,EAAYQ,OAExBS,QAAQC,IAAI8H,GACZtI,MAAM,8CAA+C,CACnDqB,OAAQ,OACRC,KAAMC,KAAKC,UAAU8G,GACrB7G,QAAS,CACP,eAAgB,sBAIjBX,MAAK,SAAAb,GAAQ,OAAIA,EAASC,UAAQY,MAAK,SAAAX,GACtCI,QAAQC,IAAIL,GACZkI,MAAMlI,EAAKoI,SACXzB,GAAMqB,QAAQ1H,MAAQ,GACtBuG,GAAMmB,QAAQ1H,MAAQ,GACtBwG,GAAOkB,QAAQ1H,MAAQ,GACvByG,GAAOiB,QAAQ1H,MAAQ,GACvB0G,GAAQgB,QAAQ1H,MAAQ,GACxBkF,EAAe,IACfE,EAAgB,IAChBI,EAAgB,IAChBF,EAAiB,IACjBN,EAAQ,IACRU,EAAW,IACXI,GAAW,IACXI,GAAY,IACZN,GAAU,IACVI,GAAU,IACVI,GAAW,IACXvD,EAAQU,KAAK,iBAIdtC,OAAM,SAAAC,GAASpB,QAAQC,IAAImB,QAUlC,OACE,gCACE,cAAC,EAAD,IACA,cAAC4B,EAAA,EAAD,CAAWU,MAAO,CAAEa,QAAS,UAA7B,SACE,cAAC0D,EAAA,EAAD,CAAMvE,MAAO,CAAEa,QAAS,SAAxB,SACE,eAACvB,EAAA,EAAD,CAAWU,MAAO,CAAEwE,UAAW,OAAQxD,WAAY,QAAnD,UACE,eAACzB,EAAA,EAAD,CAAMC,WAAS,EAACQ,MAAO,CAAEyE,cAAe,QAAxC,UACE,cAAClF,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAf,SACE,0CAEF,cAACN,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAIG,MAAO,CAAEyE,cAAe,QAA3C,SACE,eAAClF,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAf,SACE,qBAAK6E,UAAWtD,EAAQpC,KAAxB,SACGmD,GAAOwC,KAAI,SAAC7D,GACX,IA1FA8D,EA4FA,OACE,6BACE,cAACC,EAAA,EAAD,CACEC,KALFA,UAMEC,MAAOjE,EACPkE,UAjGNJ,EAiG6B9D,EAjGZ,WACrCsB,IAAU,SAAC6C,GAAD,OAAWA,EAAMC,QAAO,SAACpE,GAAD,OAAUA,IAAS8D,UAiG3BF,UAAWtD,EAAQN,QALdA,UAYjB,cAACvB,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAf,SACE,cAACsF,EAAA,EAAD,CACE3I,MAAOyF,EACPmD,SAAUvC,GACVwC,YAAY,+CACZC,UAnOI,SAAC7B,GACvB,GAAI,CAAC,QAAS,MAAO,IAAK,KAAKF,SAASE,EAAM8B,KAAM,CAClD9B,EAAMnD,iBAEN,IAAI9D,EAAQyF,EAAQkC,OAEhB3H,GAAS2G,GAAQ3G,KACnB4F,GAAU,GAAD,mBAAKD,IAAL,CAAaF,KACtBC,EAAW,OA4NGsD,SApJG,SAAC/B,GACtBvB,EAAWuB,EAAMG,OAAOpH,QAoJNiJ,QAnLE,SAAChC,GACrBA,EAAMnD,iBACN,IACIoF,EADQjC,EAAMkC,cAAcC,QAAQ,QACrBC,MAAM,sCAEzB,GAAIH,EAAQ,CACV,IAAII,EAAYJ,EAAOR,QAAO,SAACrJ,GAAD,OAAYuH,GAASvH,MACnDuG,GAAU,GAAD,mBAAKD,IAAL,YAAgB2D,OA6KT9F,MAAO,CAAEtB,MAAO,gBAKxB,cAACa,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAIG,MAAO,CAAEyE,cAAe,aAE7C,eAAClF,EAAA,EAAD,CAAMC,WAAS,EAACQ,MAAO,CAAEyE,cAAe,QAAxC,UACE,cAAClF,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAf,SACE,0CAEF,cAACN,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAIG,MAAO,CAAEyE,cAAe,QAA3C,SACE,eAAClF,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAf,SACE,qBAAK6E,UAAWtD,EAAQpC,KAAxB,SACGuD,GAAOoC,KAAI,SAAC7D,GACX,IA7HE8D,EA+HF,OACE,6BACE,cAACC,EAAA,EAAD,CACEC,KALFA,UAMEC,MAAOjE,EACPkE,UApIJJ,EAoI6B9D,EApIZ,WACvC0B,IAAU,SAACyC,GAAD,OAAWA,EAAMC,QAAO,SAACpE,GAAD,OAAUA,IAAS8D,UAoI3BF,UAAWtD,EAAQN,QALdA,UAYjB,cAACvB,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAf,SACE,cAACsF,EAAA,EAAD,CACE3I,MAAO6F,GACP+C,SAAUrC,GACVsC,YAAY,+CACZC,UAhPI,SAAC7B,GACvB,GAAI,CAAC,QAAS,IAAK,KAAKF,SAASE,EAAM8B,KAAM,CAC3C9B,EAAMnD,iBAEN,IAAI9D,EAAQ6F,GAAQ8B,OAEhB3H,GAAS2G,GAAQ3G,KACnBgG,GAAU,GAAD,mBAAKD,IAAL,CAAaF,MACtBC,GAAW,OAyOGkD,SAnMG,SAAC/B,GACtBnB,GAAWmB,EAAMG,OAAOpH,QAmMNiJ,QA/ME,SAAChC,GACrBA,EAAMnD,iBACN,IACIoF,EADQjC,EAAMkC,cAAcC,QAAQ,QACrBC,MAAM,sCAEzB,GAAIH,EAAQ,CACV,IAAIK,EAAYL,EAAOR,QAAO,SAACrJ,GAAD,OAAYuH,GAASvH,MACnD2G,GAAU,GAAD,mBAAKD,IAAL,YAAgBwD,OAyMT/F,MAAO,CAAEtB,MAAO,mBAM1B,eAACa,EAAA,EAAD,CAAMC,WAAS,EAACQ,MAAO,CAAEyE,cAAe,QAAxC,UACE,cAAClF,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAf,SACE,2CAEF,cAACN,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAIG,MAAO,CAAEyE,cAAe,QAA3C,SACE,eAAClF,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAf,SACE,qBAAK6E,UAAWtD,EAAQpC,KAAxB,SACG2D,GAAQgC,KAAI,SAAC7D,GACZ,IA/JG8D,EAiKH,OACE,6BACE,cAACC,EAAA,EAAD,CACEC,KALFA,UAMEC,MAAOjE,EACPkE,UAtKHJ,EAsK6B9D,EAtKZ,WACxC8B,IAAW,SAACqC,GAAD,OAAWA,EAAMC,QAAO,SAACpE,GAAD,OAAUA,IAAS8D,UAsK5BF,UAAWtD,EAAQN,QALdA,UAYjB,cAACvB,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAf,SACE,cAACsF,EAAA,EAAD,CACE3I,MAAOiG,GACP2C,SAAUpC,GACVqC,YAAY,+CACZC,UAnSK,SAAC7B,GACxB,GAAI,CAAC,QAAS,MAAO,KAAKF,SAASE,EAAM8B,KAAM,CAC7C9B,EAAMnD,iBAEN,IAAI9D,EAAQiG,GAAS0B,OAEjB3H,GAAS2G,GAAQ3G,KACnBoG,GAAW,GAAD,mBAAKD,IAAL,CAAcF,MACxBC,GAAY,OA4RE8C,SArOI,SAAC/B,GACvBf,GAAYe,EAAMG,OAAOpH,QAqOPiJ,QA3QG,SAAChC,GACtBA,EAAMnD,iBACN,IACIoF,EADQjC,EAAMkC,cAAcC,QAAQ,QACrBC,MAAM,sCAEzB,GAAIH,EAAQ,CACV,IAAIM,EAAaN,EAAOR,QAAO,SAACrJ,GAAD,OAAYuH,GAASvH,MACpD+G,GAAW,GAAD,mBAAKD,IAAL,YAAiBqD,OAqQXhG,MAAO,CAAEtB,MAAO,mBAM1B,eAACa,EAAA,EAAD,CAAMC,WAAS,EAACQ,MAAO,CAAEyE,cAAe,QAAxC,UACE,cAAClF,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAf,SACE,+CAEF,cAACN,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAIG,MAAO,CAAEyE,cAAe,QAA3C,SACE,cAACU,EAAA,EAAD,CACEC,SAAUnC,GACVoC,YAAY,UACZrF,MAAO,CAAEtB,MAAO,cAItB,eAACa,EAAA,EAAD,CAAMC,WAAS,EAACQ,MAAO,CAAEyE,cAAe,QAAxC,UACE,cAAClF,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAf,SACE,4CAEF,cAACN,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAIG,MAAO,CAAEyE,cAAe,QAA3C,SACE,cAACU,EAAA,EAAD,CACEE,YAAY,OACZrF,MAAO,CAAEtB,MAAO,OAChB0G,SAAUlC,GACV+C,WAAS,EACTC,KAAM,SAIF,WAAT3E,EACC,gCACE,eAAChC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAf,SACE,yEAEF,cAACN,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAGG,MAAO,CAAEwE,UAAW,UAAtC,SACE,cAACtE,EAAA,EAAD,CACEC,QAAQ,YACRL,QAASgE,GACT9D,MAAO,CAACjB,gBAAgB,UAAYoH,MAAO,WAAYxH,UAAW,SAHpE,gCASJ,cAACY,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAIG,MAAO,CAAEwE,UAAW,UAAvC,SACE,cAACtE,EAAA,EAAD,CACEC,QAAQ,YACRH,MAAO,CAACjB,gBAAgB,UAAYoH,MAAO,WAAYxH,UAAW,SAClEmB,QAASkE,GAHX,kCAUK,WAATzC,GAAqBE,GAAeM,EACtC,gCACE,eAACxC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAf,SACE,kEACoC4B,EADpC,MACoD,IACjDM,OAGL,cAACxC,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAGG,MAAO,CAAEwE,UAAW,UAAtC,SACE,cAACtE,EAAA,EAAD,CACEC,QAAQ,YACRL,QAASgE,GACT9D,MAAO,CAACjB,gBAAgB,UAAYoH,MAAO,WAAYxH,UAAW,SAHpE,gCASJ,cAACY,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAIG,MAAO,CAAEwE,UAAW,UAAvC,SACE,cAACtE,EAAA,EAAD,CACEC,QAAQ,YACRH,MAAO,CAACjB,gBAAgB,UAAYoH,MAAO,WAAYxH,UAAW,SAClEmB,QAASkE,GAHX,kCAUK,YAATzC,GAAsBI,GAAgBI,EACxC,gCACE,eAACxC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAf,SACE,mEACqC8B,EADrC,MACsD,IACnDI,OAGL,cAACxC,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAGG,MAAO,CAAEwE,UAAW,UAAtC,SACE,cAACtE,EAAA,EAAD,CACEC,QAAQ,YACRL,QAASgE,GACT9D,MAAO,CAACjB,gBAAgB,UAAYoH,MAAO,WAAYxH,UAAW,SAHpE,gCASJ,cAACY,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAIG,MAAO,CAAEwE,UAAW,UAAvC,SACE,cAACtE,EAAA,EAAD,CACEC,QAAQ,YACRH,MAAO,CAACjB,gBAAgB,UAAYoH,MAAO,WAAYxH,UAAW,SAClEmB,QAASkE,GAHX,kCAUK,WAATzC,GACFI,GACAE,GACAE,EACA,gCACE,eAACxC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAf,SACE,kEACoC8B,EAAc,IAC/CE,EAFH,OAEsBE,OAGxB,cAACxC,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAGG,MAAO,CAAEwE,UAAW,UAAtC,SACE,cAACtE,EAAA,EAAD,CACEF,MAAO,CAACjB,gBAAgB,UAAYoH,MAAO,WAAYxH,UAAW,SAClEwB,QAAQ,YACRL,QAASgE,GACTqC,MAAM,UAJR,gCAUJ,cAAC5G,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAIG,MAAO,CAAEwE,UAAW,UAAvC,SACE,cAACtE,EAAA,EAAD,CACEC,QAAQ,YACRH,MAAO,CAACjB,gBAAgB,UAAYoH,MAAO,WAAYxH,UAAW,SAClEmB,QAASkE,GAHX,kCAWN,cAACzE,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACM,MAAO,CAAEwE,UAAW,UAAY3E,GAAI,GAA/C,SACE,cAACK,EAAA,EAAD,CACAF,MAAO,CAACjB,gBAAgB,UAAYoH,MAAO,WAAYxH,UAAW,QAAQyH,SAAS,UACjFjG,QAAQ,YACRL,QAASgE,GAHX,wCAkEZ,cAAC,IAAD,CACEuC,OAAQhF,EACRiF,eAAgBvC,GAChBwC,aAAa,YACb7B,UAAU,UACV8B,iBAAiB,YALnB,SAOE,eAAClH,EAAA,EAAD,CAAWU,MAAO,CAAEwE,UAAW,UAA/B,UACE,eAACjF,EAAA,EAAD,CAAMC,WAAS,EAACQ,MAAO,CAACa,QAAS,SAAjC,UACE,cAACtB,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAGG,MAAO,CAACmG,MAAM,UAAWC,SAAS,SAApD,6BAGA,cAAC7G,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAf,SACE,eAAC4G,EAAA,EAAD,CACEC,QAAQ,2BACRjH,GAAG,qBACHjD,MAAO+E,EACPiE,SA5bO,SAAC/B,GACpBjC,EAAQiC,EAAMG,OAAOpH,QA4bTwD,MAAO,CAAEtB,MAAO,OALlB,UAOE,cAACiI,EAAA,EAAD,CAAUnK,MAAM,SAAhB,4BACA,cAACmK,EAAA,EAAD,CAAUnK,MAAM,SAAhB,kBACA,cAACmK,EAAA,EAAD,CAAUnK,MAAM,UAAhB,mBACA,cAACmK,EAAA,EAAD,CAAUnK,MAAM,SAAhB,0BAII,WAAT+E,EACC,gCACE,cAAChC,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAIG,MAAO,CAACmG,MAAM,UAAWC,SAAS,SAArD,SACE,oDAGJ,cAAC7G,EAAA,EAAD,CAAMC,WAAS,EAACoH,QAAQ,SAAS5G,MAAO,CAAEwE,UAAW,UAArD,SACGtD,EAAMyD,KAAI,SAACkC,GAAD,OACT,cAACtH,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAf,SACE,qBACEG,MAAO,CACLnB,OAAQ,SACRoB,OAAQ,WAEVR,GAAIoH,EAEJ/G,QAAS0D,GACTkB,UAAS,UAAKjD,IAAgBoF,EAAM,WAAa,GAAxC,iBARX,SAWGA,GALIA,UAUb,cAACtH,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAIG,MAAO,CAACmG,MAAM,UAAWC,SAAS,SAArD,SACE,mDAGJ,cAAC7G,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAf,SACE,cAACiH,EAAA,EAAD,CACErH,GAAG,OACHsF,MAAM,GACNxD,KAAK,OACLwF,aAAchF,EACdyD,SAAU7B,GACVe,UAAWtD,EAAQL,UACnBiG,gBAAiB,CACfC,QAAQ,GAEVC,WAAY,CACVC,KAAM,cAOhB,GAEQ,YAAT5F,EACC,gCACE,eAAChC,EAAA,EAAD,CAAMC,WAAS,EAACQ,MAAO,CAACa,QAAS,QAAjC,UACE,cAACtB,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAGG,MAAO,CAACmG,MAAM,UAAWC,SAAS,SAApD,SACE,mDAEF,cAAC7G,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAf,SACE,cAAC4G,EAAA,EAAD,CACEC,QAAQ,2BACRjH,GAAG,qBACHjD,MAAOmF,EACP6D,SAAU3B,GACV7D,MAAO,CAAEtB,MAAO,OALlB,SAOG6B,EAAMoE,KAAI,SAACyC,GAAD,OACT,cAACT,EAAA,EAAD,CAAUnK,MAAO4K,EAAM3H,GAAI2H,EAA3B,SACGA,GADmCA,aAO9C,eAAC7H,EAAA,EAAD,CAAMC,WAAS,EAACQ,MAAO,CAACa,QAAS,QAAjC,UACE,cAACtB,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAGG,MAAO,CAACmG,MAAM,UAAWC,SAAS,SAApD,SACE,iDAGF,cAAC7G,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAf,SACE,cAACiH,EAAA,EAAD,CACErH,GAAG,OACHsF,MAAM,GACNxD,KAAK,OACLiE,SAAU7B,GACVoD,aAAchF,EACd2C,UAAWtD,EAAQL,UACnBiG,gBAAiB,CACfC,QAAQ,GAEVC,WAAY,CACVC,KAAM,eAOhB,GAEQ,WAAT5F,EACC,gCACE,eAAChC,EAAA,EAAD,CAAMC,WAAS,EAACQ,MAAO,CAACa,QAAS,QAAjC,UACE,cAACtB,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAGG,MAAO,CAACmG,MAAM,UAAWC,SAAS,SAApD,SACE,mDAEF,cAAC7G,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAf,SACE,cAAC4G,EAAA,EAAD,CACEC,QAAQ,2BACRjH,GAAG,qBACHjD,MAAOmF,EACP6D,SAAU3B,GACV7D,MAAO,CAAEtB,MAAO,OALlB,SAOG6B,EAAMoE,KAAI,SAACyC,GAAD,OACT,cAACT,EAAA,EAAD,CAAUnK,MAAO4K,EAAM3H,GAAI2H,EAA3B,SACGA,GADmCA,aAO9C,eAAC7H,EAAA,EAAD,CAAMC,WAAS,EAACQ,MAAO,CAACa,QAAS,QAAjC,UACE,cAACtB,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAGG,MAAO,CAACmG,MAAM,UAAWC,SAAS,SAApD,4BAGA,cAAC7G,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAf,SACE,cAAC4G,EAAA,EAAD,CACEC,QAAQ,2BACRjH,GAAG,qBACHjD,MAAOqF,EACP2D,SArlBE,SAAC/B,GACf5B,IAAkB4B,EAAMG,OAAOpH,MACjCsF,EAAiB,IAEjBA,EAAiB2B,EAAMG,OAAOpH,QAklBhBwD,MAAO,CAAEtB,MAAO,OALlB,SAOG8B,EAAOmE,KAAI,SAAC0C,GAAD,OACV,cAACV,EAAA,EAAD,CAAUnK,MAAO6K,EAAO5H,GAAI4H,EAA5B,SACGA,GADqCA,aAOhD,eAAC9H,EAAA,EAAD,CAAMC,WAAS,EAACQ,MAAO,CAACa,QAAS,QAAjC,UACE,cAACtB,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAGG,MAAO,CAACmG,MAAM,UAAWC,SAAS,SAApD,SACE,iDAGF,cAAC7G,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAf,SACE,cAACiH,EAAA,EAAD,CACErH,GAAG,OACHsF,MAAM,GACNxD,KAAK,OACLiE,SAAU7B,GACVoD,aAAchF,EACd2C,UAAWtD,EAAQL,UACnBiG,gBAAiB,CACfC,QAAQ,GAEVC,WAAY,CACVC,KAAM,eAOhB,GAED5F,EACC,cAAChC,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAf,SACE,cAACK,EAAA,EAAD,CAAQC,QAAQ,YAAYV,GAAG,SAASK,QAASiE,GAAjD,0BAIJ,Y,OC93BZ1F,IAAMC,cAAc,SAEpB,IAAMiC,EAAQ,CACZ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAGIC,EAAS,CACb,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAGIC,EAAYlC,aAAW,SAACC,GAAD,MAAY,CACvCQ,KAAM,CACJ0B,QAAS,OACTC,SAAU,OACVC,UAAW,OACXC,QAASrC,EAAMM,QAAQ,IACvBD,OAAQ,GAEViC,KAAM,CACJjC,OAAQL,EAAMM,QAAQ,KAExBU,UAAW,CACTkB,QAAS,OACTC,SAAU,QAEZI,UAAW,CACTC,WAAYxC,EAAMM,QAAQ,GAC1BmC,YAAazC,EAAMM,QAAQ,GAC3BJ,MAAO,SAILwC,EAAQ,CACZ,SACA,UACA,YACA,WACA,SACA,WACA,UA0zBaoG,MAvzBf,SAAkBC,GAChB,IAAMnG,EAAUX,IAERpF,EAAgBN,IAAhBM,YACR,EAAiCR,IAAMO,UAAS,GAAhD,mBAAOiG,EAAP,KAAoBC,EAApB,KACA,EAAwBzG,IAAMO,SAASmM,EAAMC,SAASC,MAAMlG,MAA5D,mBAAOA,EAAP,KAAaC,EAAb,KACA,EAAsC3G,IAAMO,SAC1CmM,EAAMC,SAASC,MAAMZ,KAAO,IAD9B,mBAAOpF,EAAP,KAAoBC,EAApB,KAGA,EAAwC7G,IAAMO,SAC5CmM,EAAMC,SAASC,MAAML,MAAQ,IAD/B,mBAAOzF,EAAP,KAAqBC,EAArB,KAGA,EAA0C/G,IAAMO,SAC9CmM,EAAMC,SAASC,MAAMJ,OAAS,IADhC,mBAAOxF,EAAP,KAAsBC,EAAtB,KAGA,EAAwCjH,IAAMO,SAC5CmM,EAAMC,SAASC,MAAMC,MAAQ,IAD/B,mBAAO3F,EAAP,KAAqBC,EAArB,KAGM3C,EAAUlE,cAChB,EAA8BN,IAAMO,SAAS,IAA7C,mBAAO6G,EAAP,KAAgBC,EAAhB,KACA,EAA4BrH,IAAMO,SAASmM,EAAMC,SAASC,MAAME,IAAhE,oBAAOxF,GAAP,MAAeC,GAAf,MACA,GAA8BvH,IAAMO,SAAS,IAA7C,qBAAOiH,GAAP,MAAgBC,GAAhB,MACA,GAA4BzH,IAAMO,SAASmM,EAAMC,SAASC,MAAMG,IAAhE,qBAAOrF,GAAP,MAAeC,GAAf,MACA,GAAgC3H,IAAMO,SAAS,IAA/C,qBAAOqH,GAAP,MAAiBC,GAAjB,MACA,GAA8B7H,IAAMO,SAASmM,EAAMC,SAASC,MAAMI,KAAlE,qBAAOlF,GAAP,MAAgBC,GAAhB,MACA,GAA8B/H,IAAMO,SAASmM,EAAMC,SAASC,MAAMxD,SAAlE,qBAAOA,GAAP,MAAgB6D,GAAhB,MACA,GAAwBjN,IAAMO,SAASmM,EAAMC,SAASC,MAAMpK,MAA5D,qBAAOA,GAAP,MAAa0K,GAAb,MACIC,GAAST,EAAMC,SAASC,MAAMtK,IAIlC,SAASgG,GAAQtH,GACf,IAAIN,EAAQ,KAUZ,OARI6H,GAASvH,KACXN,EAAK,UAAMM,EAAN,6BA2BT,SAAiBA,GACf,MAAO,oCAAoCwH,KAAKxH,GAzB3CyH,CAAQzH,KACXN,EAAK,UAAMM,EAAN,oCAGHN,EAQN,SAAS6H,GAASvH,GAChB,QAAIsG,GAAOoB,SAAS1H,OAET0G,GAAOgB,SAAS1H,MAEhB8G,GAAQY,SAAS1H,IAW9B,IAgGM2H,GAAY,SAACC,GAEbhC,IAAgBgC,EAAMC,cAAcjE,GACtCiC,EAAe,IAEfA,EAAe+B,EAAMC,cAAcjE,KAIjCkE,GAAa,SAACF,GAClBzB,EAAgByB,EAAMG,OAAOpH,QAGzBqH,GAAa,SAACJ,GACd9B,IAAiB8B,EAAMG,OAAOpH,MAChCoF,EAAgB,IAEhBA,EAAgB6B,EAAMG,OAAOpH,QAyBjC,SAASsH,KACPxC,GAAU,GAQZ,SAASyC,KACPzC,GAAU,GAEZ,IAAM2G,GAAW,WACf,GAAe,IAAXhE,IAAyB,IAAR5G,GACnB+G,MAAM,oCACD,CAGL,IAAMC,EAAW,CACf,GAAMlC,GACN,GAAMI,GACN,IAAOI,GACP,QAAWsB,GACX,KAAQ5G,GACR,IAAOoE,EACP,KAAQE,EACR,KAAQI,EACR,MAASF,EACT,KAAQN,EACR,OAAUlG,EAAYQ,MACtB,YAAeR,EAAYM,aAG7BW,QAAQC,IAAI8H,GACZ/H,QAAQC,IAAIyL,IACZjM,MAAM,+CAAD,OAAgDiM,IAAU,CAC7D5K,OAAQ,QACRC,KAAMC,KAAKC,UAAU8G,GACrB7G,QAAS,CACP,eAAgB,sBAIjBX,MAAK,SAAAb,GAAQ,OAAIA,EAASC,UAAQY,MAAK,SAAAX,GACtCI,QAAQC,IAAIL,GACZkI,MAAMlI,EAAKoI,SAEXjF,EAAQU,KAAK,iBAIdtC,OAAM,SAAAC,GAASpB,QAAQC,IAAImB,QAQlC,OACE,gCACE,cAAC,EAAD,IACA,cAAC4B,EAAA,EAAD,CAAWU,MAAO,CAAEa,QAAS,UAA7B,SACE,cAAC0D,EAAA,EAAD,CAAMvE,MAAO,CAAEa,QAAS,SAAxB,SACE,eAACvB,EAAA,EAAD,CAAWU,MAAO,CAAEwE,UAAW,OAAQxD,WAAY,QAAnD,UACE,eAACzB,EAAA,EAAD,CAAMC,WAAS,EAACQ,MAAO,CAAEyE,cAAe,QAAxC,UACE,cAAClF,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAf,SACE,0CAEF,cAACN,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAIG,MAAO,CAAEyE,cAAe,QAA3C,SACA,eAAClF,EAAA,EAAD,CAAMC,WAAS,EAAf,UACI,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAf,SACE,qBAAK6E,UAAWtD,EAAQpC,KAAxB,SACGmD,GAAOwC,KAAI,SAAC7D,GACX,IAhIA8D,EAkIA,OACE,6BACE,cAACC,EAAA,EAAD,CACEC,KALFA,UAMEC,MAAOjE,EACPkE,UAvINJ,EAuI6B9D,EAvIZ,WACrCsB,IAAU,SAAC6C,GAAD,OAAWA,EAAMC,QAAO,SAACpE,GAAD,OAAUA,IAAS8D,UAuI3BF,UAAWtD,EAAQN,QALdA,UAYjB,cAACvB,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAf,SACE,cAACsF,EAAA,EAAD,CACE3I,MAAOyF,EAEPoD,YAAY,+CACZC,UAxOI,SAAC7B,GACvB,GAAI,CAAC,QAAS,IAAK,KAAKF,SAASE,EAAM8B,KAAM,CAC3C9B,EAAMnD,iBAEN,IAAI9D,EAAQyF,EAAQkC,OAEhB3H,GAAS2G,GAAQ3G,KACnB4F,GAAU,GAAD,mBAAKD,IAAL,CAAaF,KACtBC,EAAW,OAiOGsD,SAzJG,SAAC/B,GACtBvB,EAAWuB,EAAMG,OAAOpH,QAyJNiJ,QAxLE,SAAChC,GACrBA,EAAMnD,iBACN,IACIoF,EADQjC,EAAMkC,cAAcC,QAAQ,QACrBC,MAAM,sCAEzB,GAAIH,EAAQ,CACV,IAAII,EAAYJ,EAAOR,QAAO,SAACrJ,GAAD,OAAYuH,GAASvH,MACnDuG,GAAU,GAAD,mBAAKD,IAAL,YAAgB2D,OAkLT9F,MAAO,CAAEtB,MAAO,gBAUxB,cAACa,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAIG,MAAO,CAAEyE,cAAe,aAE7C,eAAClF,EAAA,EAAD,CAAMC,WAAS,EAACQ,MAAO,CAAEyE,cAAe,QAAxC,UACE,cAAClF,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAf,SACE,0CAEF,cAACN,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAIG,MAAO,CAAEyE,cAAe,QAA3C,SACE,eAAClF,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAf,SACE,qBAAK6E,UAAWtD,EAAQpC,KAAxB,SACGuD,GAAOoC,KAAI,SAAC7D,GACX,IAxKE8D,EA0KF,OACE,6BACE,cAACC,EAAA,EAAD,CACEC,KALFA,UAMEC,MAAOjE,EACPkE,UA/KJJ,EA+K6B9D,EA/KZ,WACvC0B,IAAU,SAACyC,GAAD,OAAWA,EAAMC,QAAO,SAACpE,GAAD,OAAUA,IAAS8D,UA+K3BF,UAAWtD,EAAQN,QALdA,UAYjB,cAACvB,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAf,SACE,cAACsF,EAAA,EAAD,CACE3I,MAAO6F,GAEPgD,YAAY,+CACZC,UA1PI,SAAC7B,GACvB,GAAI,CAAC,QAAS,MAAO,IAAI,KAAKF,SAASE,EAAM8B,KAAM,CACjD9B,EAAMnD,iBAEN,IAAI9D,EAAQ6F,GAAQ8B,OAEhB3H,GAAS2G,GAAQ3G,KACnBgG,GAAU,GAAD,mBAAKD,IAAL,CAAaF,MACtBC,GAAW,OAmPGkD,SA7MG,SAAC/B,GACtBnB,GAAWmB,EAAMG,OAAOpH,QA6MNiJ,QAzNE,SAAChC,GACrBA,EAAMnD,iBACN,IACIoF,EADQjC,EAAMkC,cAAcC,QAAQ,QACrBC,MAAM,sCAEzB,GAAIH,EAAQ,CACV,IAAIK,EAAYL,EAAOR,QAAO,SAACrJ,GAAD,OAAYuH,GAASvH,MACnD2G,GAAU,GAAD,mBAAKD,IAAL,YAAgBwD,OAmNT/F,MAAO,CAAEtB,MAAO,mBAO1B,eAACa,EAAA,EAAD,CAAMC,WAAS,EAACQ,MAAO,CAAEyE,cAAe,QAAxC,UACE,cAAClF,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAf,SACE,2CAEF,cAACN,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAIG,MAAO,CAAEyE,cAAe,QAA3C,SACE,eAAClF,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAf,SACE,qBAAK6E,UAAWtD,EAAQpC,KAAxB,SACG2D,GAAQgC,KAAI,SAAC7D,GACZ,IA3MG8D,EA6MH,OACE,6BACE,cAACC,EAAA,EAAD,CACEC,KALFA,UAMEC,MAAOjE,EACPkE,UAlNHJ,EAkN6B9D,EAlNZ,WACxC8B,IAAW,SAACqC,GAAD,OAAWA,EAAMC,QAAO,SAACpE,GAAD,OAAUA,IAAS8D,UAkN5BF,UAAWtD,EAAQN,QALdA,UAYjB,cAACvB,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAf,SACE,cAACsF,EAAA,EAAD,CACE3I,MAAOiG,GAEP4C,YAAY,+CACZC,UA9SK,SAAC7B,GACxB,GAAI,CAAC,QAAS,MAAO,IAAI,KAAKF,SAASE,EAAM8B,KAAM,CACjD9B,EAAMnD,iBAEN,IAAI9D,EAAQiG,GAAS0B,OAEjB3H,GAAS2G,GAAQ3G,KACnBoG,GAAW,GAAD,mBAAKD,IAAL,CAAcF,MACxBC,GAAY,OAuSE8C,SAhPI,SAAC/B,GACvBf,GAAYe,EAAMG,OAAOpH,QAgPPiJ,QAtRG,SAAChC,GACtBA,EAAMnD,iBACN,IACIoF,EADQjC,EAAMkC,cAAcC,QAAQ,QACrBC,MAAM,sCAEzB,GAAIH,EAAQ,CACV,IAAIM,EAAaN,EAAOR,QAAO,SAACrJ,GAAD,OAAYuH,GAASvH,MACpD+G,GAAW,GAAD,mBAAKD,IAAL,YAAiBqD,OAgRXhG,MAAO,CAAEtB,MAAO,mBAW1B,eAACa,EAAA,EAAD,CAAMC,WAAS,EAACQ,MAAO,CAAEyE,cAAe,QAAxC,UACE,cAAClF,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAf,SACE,+CAEF,cAACN,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAIG,MAAO,CAAEyE,cAAe,QAA3C,SACE,cAACU,EAAA,EAAD,CACE3I,MAAOyH,GACPuB,SAhNW,SAAC/B,GAC1BqE,GAAWrE,EAAMG,OAAOpH,QAgNV6I,YAAY,UACZrF,MAAO,CAAEtB,MAAO,cAItB,eAACa,EAAA,EAAD,CAAMC,WAAS,EAACQ,MAAO,CAAEyE,cAAe,QAAxC,UACE,cAAClF,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAf,SACE,4CAEF,cAACN,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAIG,MAAO,CAAEyE,cAAe,QAA3C,SACE,cAACU,EAAA,EAAD,CACEE,YAAY,OACZrF,MAAO,CAAEtB,MAAO,OAChBuH,WAAS,EACTC,KAAM,EACN1J,MAAOa,GACTmI,SA9NU,SAAC/B,GACvBsE,GAAQtE,EAAMG,OAAOpH,eAiOH,WAAT+E,EACC,gCACE,eAAChC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAf,SACE,yEAEF,cAACN,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAGG,MAAO,CAAEwE,UAAW,UAAtC,SACE,cAACtE,EAAA,EAAD,CACEC,QAAQ,YACRL,QAASgE,GACT9D,MAAO,CAACjB,gBAAgB,UAAYoH,MAAO,WAAYxH,UAAW,SAHpE,gCASJ,cAACY,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAIG,MAAO,CAAEwE,UAAW,UAAvC,SACE,cAACtE,EAAA,EAAD,CAAQC,QAAQ,YAAYL,QAASmI,GAAUjI,MAAO,CAACjB,gBAAgB,UAAYoH,MAAO,WAAYxH,UAAW,QAAQyH,SAAS,UAAlI,8BAMK,WAAT7E,GAAqBE,GAAeM,EACtC,gCACE,eAACxC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAf,SACE,kEACoC4B,EADpC,MACoD,IACjDM,OAGL,cAACxC,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAGG,MAAO,CAAEwE,UAAW,UAAtC,SACE,cAACtE,EAAA,EAAD,CACEC,QAAQ,YACRL,QAASgE,GACT9D,MAAO,CAACjB,gBAAgB,UAAYoH,MAAO,WAAYxH,UAAW,SAHpE,gCASJ,cAACY,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAIG,MAAO,CAAEwE,UAAW,UAAvC,SACE,cAACtE,EAAA,EAAD,CAAQC,QAAQ,YAAaL,QAASmI,GAAUjI,MAAO,CAACjB,gBAAgB,UAAYoH,MAAO,WAAYxH,UAAW,QAAQyH,SAAS,UAAnI,8BAMK,YAAT7E,GAAsBI,GAAgBI,EACxC,gCACE,eAACxC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAf,SACE,mEACqC8B,EADrC,MACsD,IACnDI,OAGL,cAACxC,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAGG,MAAO,CAAEwE,UAAW,UAAtC,SACE,cAACtE,EAAA,EAAD,CACEC,QAAQ,YACRL,QAASgE,GACT9D,MAAO,CAACjB,gBAAgB,UAAYoH,MAAO,WAAYxH,UAAW,SAHpE,gCASJ,cAACY,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAIG,MAAO,CAAEwE,UAAW,UAAvC,SACE,cAACtE,EAAA,EAAD,CAAQC,QAAQ,YAAYL,QAASmI,GAAUjI,MAAO,CAACjB,gBAAgB,UAAYoH,MAAO,WAAYxH,UAAW,QAAQyH,SAAS,UAAlI,8BAMK,WAAT7E,GACFI,GACAE,GACAE,EACA,gCACE,eAACxC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAf,SACE,kEACoC8B,EAAc,IAC/CE,EAFH,OAEsBE,OAGxB,cAACxC,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAGG,MAAO,CAAEwE,UAAW,UAAtC,SACE,cAACtE,EAAA,EAAD,CACEC,QAAQ,YACRL,QAASgE,GACT9D,MAAO,CAACjB,gBAAgB,UAAYoH,MAAO,WAAYxH,UAAW,SAHpE,gCASJ,cAACY,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAIG,MAAO,CAAEwE,UAAW,UAAvC,SACE,cAACtE,EAAA,EAAD,CAAQC,QAAQ,YAAYL,QAASmI,GAAUjI,MAAO,CAACjB,gBAAgB,UAAYoH,MAAO,WAAYxH,UAAW,QAAQyH,SAAS,UAAlI,8BAON,cAAC7G,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACM,MAAO,CAAEwE,UAAW,UAAY3E,GAAI,GAA/C,SACE,cAACK,EAAA,EAAD,CACEC,QAAQ,YACRL,QAASgE,GACT9D,MAAO,CAACjB,gBAAgB,UAAYoH,MAAO,WAAYxH,UAAW,SAHpE,wCAiEZ,cAAC,IAAD,CACE0H,OAAQhF,EACRiF,eAAgBvC,GAChBwC,aAAa,YACb7B,UAAU,UACV8B,iBAAiB,YALnB,SAOE,eAAClH,EAAA,EAAD,CAAWU,MAAO,CAAEwE,UAAW,UAA/B,UACE,eAACjF,EAAA,EAAD,CAAMC,WAAS,EAACQ,MAAO,CACjBa,QAAQ,UADd,UAGE,cAACtB,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAGG,MAAO,CAACmG,MAAM,UAAWC,SAAS,UAApD,6BAGA,cAAC7G,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAf,SACE,eAAC4G,EAAA,EAAD,CACEC,QAAQ,2BACRjH,GAAG,qBACHjD,MAAO+E,EACPiE,SAlaO,SAAC/B,GACpBjC,EAAQiC,EAAMG,OAAOpH,QAkaTwD,MAAO,CAAEtB,MAAO,OALlB,UAOE,cAACiI,EAAA,EAAD,CAAUnK,MAAM,SAAhB,4BACA,cAACmK,EAAA,EAAD,CAAUnK,MAAM,SAAhB,kBACA,cAACmK,EAAA,EAAD,CAAUnK,MAAM,UAAhB,mBACA,cAACmK,EAAA,EAAD,CAAUnK,MAAM,SAAhB,0BAII,WAAT+E,EACC,gCACE,cAAChC,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAIG,MAAO,CAACmG,MAAM,UAAWC,SAAS,UAArD,SACE,oDAGJ,cAAC7G,EAAA,EAAD,CAAMC,WAAS,EAACoH,QAAQ,SAAS5G,MAAO,CAAEwE,UAAW,UAArD,SACGtD,EAAMyD,KAAI,SAACkC,GAAD,OACT,cAACtH,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAf,SACE,qBACEG,MAAO,CACLnB,OAAQ,SACRoB,OAAQ,WAEVR,GAAIoH,EAEJ/G,QAAS0D,GACTkB,UAAS,UACPjD,IAAgBoF,EAAM,WAAa,GAD5B,iBARX,SAYGA,GANIA,UAWb,cAACtH,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAIG,MAAO,CAACmG,MAAM,UAAWC,SAAS,UAArD,SACE,mDAGJ,cAAC7G,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAf,SACE,cAACiH,EAAA,EAAD,CACErH,GAAG,OACHsF,MAAM,GACNxD,KAAK,OACLwF,aAAchF,EACdyD,SAAU7B,GACVe,UAAWtD,EAAQL,UACnBiG,gBAAiB,CACfC,QAAQ,GAEVC,WAAY,CACVC,KAAM,cAOhB,GAEQ,YAAT5F,EACC,gCACE,eAAChC,EAAA,EAAD,CAAMC,WAAS,EAACQ,MAAO,CACrBa,QAAQ,UACP6D,UAAU,UAFb,UAGE,cAACnF,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAGG,MAAO,CAACmG,MAAM,UAAWC,SAAS,UAApD,SACE,mDAEF,cAAC7G,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAf,SACE,cAAC4G,EAAA,EAAD,CACEC,QAAQ,2BACRjH,GAAG,qBACHjD,MAAOmF,EACP6D,SAAU3B,GACV7D,MAAO,CAAEtB,MAAO,OALlB,SAOG6B,EAAMoE,KAAI,SAACyC,GAAD,OACT,cAACT,EAAA,EAAD,CAAUnK,MAAO4K,EAAM3H,GAAI2H,EAA3B,SACGA,GADmCA,aAO9C,eAAC7H,EAAA,EAAD,CAAMC,WAAS,EAACQ,MAAO,CACrBa,QAAQ,UADV,UAGE,cAACtB,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAGG,MAAO,CAACmG,MAAM,UAAWC,SAAS,UAApD,SACE,iDAGF,cAAC7G,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAf,SACE,cAACiH,EAAA,EAAD,CACErH,GAAG,OACHsF,MAAM,GACNxD,KAAK,OACLiE,SAAU7B,GACVoD,aAAchF,EACd2C,UAAWtD,EAAQL,UACnBiG,gBAAiB,CACfC,QAAQ,GAEVC,WAAY,CACVC,KAAM,eAOhB,GAEQ,WAAT5F,EACC,gCACE,eAAChC,EAAA,EAAD,CAAMC,WAAS,EAACQ,MAAO,CACrBa,QAAQ,UADV,UAGE,cAACtB,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAGG,MAAO,CAACmG,MAAM,UAAWC,SAAS,UAApD,SACE,mDAEF,cAAC7G,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAf,SACE,cAAC4G,EAAA,EAAD,CACEC,QAAQ,2BACRjH,GAAG,qBACHjD,MAAOmF,EACP6D,SAAU3B,GACV7D,MAAO,CAAEtB,MAAO,OALlB,SAOG6B,EAAMoE,KAAI,SAACyC,GAAD,OACT,cAACT,EAAA,EAAD,CAAUnK,MAAO4K,EAAM3H,GAAI2H,EAA3B,SACGA,GADmCA,aAO9C,eAAC7H,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAEG,MAAO,CAACmG,MAAM,UAAWC,SAAS,UAAnD,4BAGA,cAAC7G,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAf,SACE,cAAC4G,EAAA,EAAD,CACEC,QAAQ,2BACRjH,GAAG,qBACHjD,MAAOqF,EACP2D,SAzkBE,SAAC/B,GACf5B,IAAkB4B,EAAMG,OAAOpH,MACjCsF,EAAiB,IAEjBA,EAAiB2B,EAAMG,OAAOpH,QAskBhBwD,MAAO,CAAEtB,MAAO,OALlB,SAOG8B,EAAOmE,KAAI,SAAC0C,GAAD,OACV,cAACV,EAAA,EAAD,CAAUnK,MAAO6K,EAAO5H,GAAI4H,EAA5B,SACGA,GADqCA,aAOhD,eAAC9H,EAAA,EAAD,CAAMC,WAAS,EAACQ,MAAO,CACrBa,QAAQ,UADV,UAGE,cAACtB,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAGG,MAAO,CAACmG,MAAM,UAAWC,SAAS,UAApD,SACE,iDAGF,cAAC7G,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAf,SACE,cAACiH,EAAA,EAAD,CACErH,GAAG,OACHsF,MAAM,GACNxD,KAAK,OACLiE,SAAU7B,GACVoD,aAAchF,EACd2C,UAAWtD,EAAQL,UACnBiG,gBAAiB,CACfC,QAAQ,GAEVC,WAAY,CACVC,KAAM,eAOhB,GAED5F,EACC,cAAChC,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAf,SACE,cAACK,EAAA,EAAD,CAAQC,QAAQ,YAAYL,QAASiE,GAAY/D,MAAO,CAACjB,gBAAgB,UAAYoH,MAAO,WAAYxH,UAAW,SAAnH,0BAMJ,Y,qBCn5BG,OAA0B,iC,yCCyBzC,SAASuJ,GAASX,GACd,IAAQrM,EAAqCqM,EAArCrM,SAAUsB,EAA2B+K,EAA3B/K,MAAO2L,EAAoBZ,EAApBY,MAAUC,EAAnC,YAA6Cb,EAA7C,IAEA,OACI,6CACIc,KAAK,WACLC,OAAQ9L,IAAU2L,EAClB1I,GAAE,0BAAqB0I,GACvBI,kBAAA,qBAA+BJ,IAC3BC,GALR,aAOK5L,IAAU2L,GACP,cAACK,EAAA,EAAD,CAAKC,EAAG,EAAR,SACI,cAACC,EAAA,EAAD,UAAaxN,SAajC,SAASyN,GAAUR,GACf,MAAO,CACH1I,GAAG,cAAD,OAAgB0I,GAClB,gBAAgB,mBAAhB,OAAoCA,IAhC5C9J,IAAMC,cAAc,SAmCpB,IAAMmC,GAAYlC,aAAW,SAACC,GAAD,MAAY,CAErCC,KAAM,CACFC,MAAO,OACPC,UAAW,SAEfC,OAAQ,CACJC,OAAQL,EAAMM,QAAQ,EAAG,EAAG,GAC5BC,gBAAiB,WAErBC,KAAM,CACFC,SAAU,EACVN,UAAW,OACXI,gBAAiB,QACjBG,UAAW,YAyRJ0J,GApRC,WACZ,IAAMvJ,EAAUlE,cAChB,EAAwBC,mBAAS,IAAjC,mBAAOyN,EAAP,KAAaC,EAAb,KACA,EAA0B1N,mBAAS,IAAnC,mBAAOS,EAAP,KAAckN,EAAd,KACA,EAAwB3N,mBAAS,IAAjC,mBAAO6B,EAAP,KAAa+L,EAAb,KACA,EAAgEjO,IAAxD0B,EAAR,EAAQA,QAASmB,EAAjB,EAAiBA,WAAYI,EAA7B,EAA6BA,YAAa3C,EAA1C,EAA0CA,YAAYE,EAAtD,EAAsDA,MACtD,EAA0BH,mBAAS,GAAnC,mBAAOoB,EAAP,KAAcyM,EAAd,KACA,EAAiC7N,oBAAS,GAA1C,mBAAOiG,EAAP,KAAoBC,EAApB,KAKA,SAASyC,IACLzC,GAAU,GAbI,SAgBH4H,EAhBG,8EAgBlB,WAA4B7I,GAA5B,SAAAvE,EAAA,6DACIuE,EAAEC,iBADN,SAEU7D,IAFV,OAGI4C,EAAQU,KAAK,cAHjB,4CAhBkB,sBAqBlB,SAASoJ,EAAQ9I,GACb0I,EAAS1I,EAAEuD,OAAOpH,OAEtB,SAAS4M,EAAQ/I,GACbyI,EAAQzI,EAAEuD,OAAOpH,OAzBH,4CA8BlB,WAA2B6D,GAA3B,SAAAvE,EAAA,6DACIuE,EAAEC,iBADN,SAEU1C,EAAW/B,EAAOgN,GAF5B,OAIe,IAAPtN,IACAwN,EAAS,IACTD,EAAQ,IACRzJ,EAAQU,KAAK,eAEjBgE,IATJ,4CA9BkB,sBA2ClB,SAASsF,EAAcpM,EAAMpB,GACzB,IAAMqB,EAAQ,CACV,IAAOrB,EACP,YAAcoB,GAWpB,OATElB,MAAM,8CAA+C,CACrDqB,OAAQ,OACRC,KAAMC,KAAKC,UAAUL,GACrBM,QAAS,CACP,eAAgB,sBAEjBC,OAAM,SAAAC,GACLpB,QAAQC,IAAImB,OAET,EAzDS,4CA4DlB,WAA4B2C,GAA5B,SAAAvE,EAAA,6DACIuE,EAAEC,iBADN,SAEUtC,EAAYnC,EAAOgN,GAF7B,uBAGUQ,EAAcpM,EAAKpB,GAH7B,OAIIkN,EAAS,IACTD,EAAQ,IACRzJ,EAAQU,KAAK,cANjB,4CA5DkB,sBAoElB,IAAMqB,GAAUX,KAOhB,OAHAnE,QAAQC,IAAIhB,GAIR,gCACI,cAAC,EAAD,CAAQ6D,KAAK,YACb,cAACE,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACkF,UAAU,OAA1B,UACI,cAACnF,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAf,SACI,sBAAKJ,GAAG,UAAR,UACI,oBAAIA,GAAG,SAAP,SAAgB,qEAChB,mBAAGA,GAAG,SAAN,SAAe,iFAEdpE,EAEO,cAAC6E,EAAA,EAAD,CAAQC,QAAQ,WAAWV,GAAG,UAAU6J,QAAS,cAAC,KAAD,IAAyBlJ,KAAK,aAA/E,sBAIA,cAACF,EAAA,EAAD,CAAQC,QAAQ,YAAYV,GAAG,WAAWK,QAlF1E,WACIwB,GAAU,IAiFkB,2BAKP/F,EAAO,8BAAMA,IAAe,QAKrC,cAACgE,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAf,SACI,qBAAK0J,IAAKC,GAAMxJ,MAAO,CAAEyJ,OAAQ,SAAWC,IAAI,YAM5D,cAAC,IAAD,CAAOrD,OAAQhF,EAAaiF,eAAgBvC,EAAYwC,aAAa,YAAY7B,UAAU,WAAW8B,iBAAiB,aAAvH,SAEI,eAAClH,EAAA,EAAD,CAAWqK,OAAK,EAAhB,UAGI,eAACpK,EAAA,EAAD,CAAMC,WAAS,EAAf,UACI,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,SACI,mBAAGE,QAASiE,EAAZ,SACI,cAAC6F,EAAA,EAAD,CAAYC,aAAW,SAAvB,SACI,cAAC,IAAD,CAAkB7J,MAAO,CAAEmG,MAAO,mBAI9C,cAAC5G,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACI,cAACkK,EAAA,EAAD,CAAQC,SAAS,SAASrF,UAAWtD,GAAQpC,KAA7C,SACI,eAACgL,EAAA,EAAD,CAAMxN,MAAOA,EAETgJ,SAxDX,SAAC/B,EAAOwG,GACzBhB,EAASgB,IAwDmBJ,aAAW,sBACXK,eAAe,UACfC,UAAU,UACVC,UAAQ,EANZ,UAOI,cAACC,EAAA,EAAD,aAAKtF,MAAM,SAAY4D,GAAU,KACjC,cAAC0B,EAAA,EAAD,aAAKtF,MAAM,UAAa4D,GAAU,eASlD,cAAC,GAAD,CAAUnM,MAAOA,EAAO2L,MAAO,EAA/B,SACI,uBAAMzD,UAAWtD,GAAQ3C,KAAM6L,YAAU,EAAzC,UACI,cAACxD,EAAA,EAAD,CACI3G,QAAQ,WACRtB,OAAO,SACP0L,UAAQ,EACRC,WAAS,EACT/K,GAAG,QACHsF,MAAM,gBACN9H,KAAK,QACLwN,aAAa,QACbjO,MAAOX,EACP6O,WAAS,EACTlF,SAAU2D,IAEd,cAACrC,EAAA,EAAD,CACI3G,QAAQ,WACRtB,OAAO,SACP0L,UAAQ,EACRC,WAAS,EACTvN,KAAK,WACL8H,MAAM,WACNxD,KAAK,WACL9B,GAAG,WACHgL,aAAa,mBACbjO,MAAOqM,EACPrD,SAAU4D,IAGd,cAAClJ,EAAA,EAAD,CACIqB,KAAK,SACLiJ,WAAS,EACTrK,QAAQ,YACRgG,MAAM,UACNzB,UAAWtD,GAAQxC,OACnBkB,QA/KV,4CAyKM,mBAWA,mBAAG4E,UAAU,KAAb,kBACA,eAACxE,EAAA,EAAD,CACIqB,KAAK,SACLiJ,WAAS,EACTrK,QAAQ,YACRgG,MAAM,UACNzB,UAAWtD,GAAQxC,OACnBkB,QAASoJ,EACTlJ,MAAO,CAAEyJ,OAAQ,QAPrB,UAUI,mBAAGkB,MAAM,gBAAgB3K,MAAO,CAAEoG,SAAU,SAAUnF,YAAa,WAVvE,+BAiBR,cAAC,GAAD,CAAUzE,MAAOA,EAAO2L,MAAO,EAA/B,SACI,uBAAMzD,UAAWtD,GAAQ3C,KAAM6L,YAAU,EAAzC,UACA,cAACxD,EAAA,EAAD,CACQ3G,QAAQ,WACRtB,OAAO,SACP0L,UAAQ,EACRC,WAAS,EACT/K,GAAG,OACHsF,MAAM,OACN9H,KAAK,OACLwN,aAAa,OACbjO,MAAOS,EACPyN,WAAS,EACTlF,SAxL5B,SAAiBnF,GACb2I,EAAQ3I,EAAEuD,OAAOpH,UAyLG,cAACsK,EAAA,EAAD,CACI3G,QAAQ,WACRtB,OAAO,SACP0L,UAAQ,EACRC,WAAS,EACT/K,GAAG,QACHsF,MAAM,gBACN9H,KAAK,QACLwN,aAAa,QACbjO,MAAOX,EAEP2J,SAAU2D,IAEd,cAACrC,EAAA,EAAD,CACI3G,QAAQ,WACRtB,OAAO,SACP0L,UAAQ,EACRC,WAAS,EACTvN,KAAK,WACL8H,MAAM,WACNxD,KAAK,WACL9B,GAAG,WACHgL,aAAa,mBACbjO,MAAOqM,EACPrD,SAAU4D,IAGd,cAAClJ,EAAA,EAAD,CACIqB,KAAK,SACLiJ,WAAS,EACTrK,QAAQ,YACRgG,MAAM,UACNzB,UAAWtD,GAAQxC,OACnBkB,QAtPV,4CAgPM,oBAUA,mBAAG4E,UAAU,KAAb,kBACA,eAACxE,EAAA,EAAD,CACIqB,KAAK,SACLiJ,WAAS,EACTrK,QAAQ,YACRgG,MAAM,UACNzB,UAAWtD,GAAQxC,OACnBkB,QAASoJ,EACTlJ,MAAO,CAAEyJ,OAAQ,QAPrB,UAUI,mBAAGkB,MAAM,gBAAgB3K,MAAO,CAAEoG,SAAU,SAAUnF,YAAa,WAVvE,wC,4KC9S5B,SAASiH,GAASX,GAChB,IAAQrM,EAAqCqM,EAArCrM,SAAUsB,EAA2B+K,EAA3B/K,MAAO2L,EAAoBZ,EAApBY,MAAUC,EAAnC,YAA6Cb,EAA7C,IAEA,OACE,6CACEc,KAAK,WACLC,OAAQ9L,IAAU2L,EAClB1I,GAAE,uBAAkB0I,GACpBI,kBAAA,kBAA4BJ,IACxBC,GALN,aAOG5L,IAAU2L,GACT,cAACK,EAAA,EAAD,CAAKC,EAAG,EAAR,SACE,cAACC,EAAA,EAAD,UAAaxN,SAavB,SAASyN,GAAUR,GACjB,MAAO,CACL1I,GAAG,WAAD,OAAa0I,GACf,gBAAgB,gBAAhB,OAAiCA,IAIrC,SAASyC,GAAQrD,GACf,OACE,cAAC8C,EAAA,EAAD,aACEQ,UAAU,IACV/K,QAAS,SAAC2D,GACRA,EAAMnD,mBAEJiH,IAMV,IAAM9G,GAAYlC,aAAW,SAACC,GAAD,MAAY,CAEvCC,KAAM,CACJC,MAAO,OACPC,UAAW,SAEbC,OAAQ,CACNC,OAAQL,EAAMM,QAAQ,EAAG,EAAG,GAC5BC,gBAAiB,WAEnBC,KAAM,CACJC,SAAU,EACVN,UAAW,OACXI,gBAAiB,UACjBG,UAAW,OACXiH,MAAO,QACPC,SAAU,YAmVC0E,OA9Uf,WACE,MAA0B1P,mBAAS,GAAnC,mBAAOoB,EAAP,KAAcyM,EAAd,KACA,EAAwBpO,IAAMO,UAAS,GAAvC,mBAAO2P,EAAP,KAAaC,EAAb,KACA,EAAoCnQ,IAAMO,SAAS,IAAnD,mBAAO6P,EAAP,KAAmBC,EAAnB,KACA,EAAkC9P,oBAAS,GAA3C,mBAAO+P,EAAP,KAAkBC,EAAlB,KACM/L,EAAUlE,cACTE,EAAgBN,IAAhBM,YACP,EAA0BD,mBAAS,IAAnC,mBAAOiQ,EAAP,KAAcC,EAAd,KAKAlP,qBAAU,WACJf,EACFU,MAAM,8CAA+C,CACrDqB,OAAQ,MACRI,QAAS,CACP,eAAgB,mBAChB,OAAUnC,EAAYQ,SAGvBgB,MAAK,SAAAb,GAAQ,OAAIA,EAASC,UAAQY,MAAK,SAAAX,GACtCI,QAAQC,IAAIL,GAEZoP,EAASpP,GACTkP,GAAa,MAEd3N,OAAM,SAAAC,GAASpB,QAAQC,IAAImB,MAE5B2B,EAAQU,KAAK,OAGd,IAIJ,IAgBOwL,EAAc,SAAC9L,GACfwL,IAAexL,GACjByL,EAAc,IACdF,GAAQ,KAERE,EAAczL,GACduL,GAAQ,KAIN5J,EAAUX,KAmBZ+K,EAAS,SAAC/L,GACd1D,MAAM,+CAAD,OAAgD0D,GAAM,CACvDrC,OAAQ,SACRI,QAAS,CACP,eAAgB,sBAGjBX,MAAK,SAAAb,GAAQ,OAAIA,EAASC,UAAQY,MAAK,SAAAX,GACtCI,QAAQC,IAAIL,GACZkI,MAAMlI,EAAKoI,SArDjBvI,MAAM,8CAA+C,CACnDqB,OAAQ,MACRI,QAAS,CACP,eAAgB,mBAChB,OAAUnC,EAAYQ,SAGvBgB,MAAK,SAAAb,GAAQ,OAAIA,EAASC,UAAQY,MAAK,SAAAX,GACtCI,QAAQC,IAAIL,GAEZoP,EAASpP,GACTkP,GAAa,MAEd3N,OAAM,SAAAC,GAASpB,QAAQC,IAAImB,SA2CzBD,OAAM,SAAAC,GAASpB,QAAQC,IAAImB,OAOhC,OACE,gCACE,cAAC,EAAD,CAAQ0B,KAAK,cACb,cAACE,EAAA,EAAD,UACE,eAACiF,EAAA,EAAD,CAAMvE,MAAO,CAAEyL,SAAU,UAAzB,UACE,cAAC3B,EAAA,EAAD,CAAQC,SAAS,SAASrF,UAAWtD,EAAQpC,KAA7C,SACE,eAACgL,EAAA,EAAD,CACE7J,QAAQ,YACR3D,MAAOA,EACPgJ,SAZS,SAAC/B,EAAOwG,GAC3BhB,EAASgB,IAYCC,eAAe,UACfL,aAAW,mBALb,UAOE,cAACe,GAAD,aAAS7F,MAAM,kBAAkB/E,MAAO,CAAEoG,SAAU,UAAYhG,KAAK,WAAcuI,GAAU,KAC7F,cAACiC,GAAD,aAAS7F,MAAM,aAAa/E,MAAO,CAAEoG,SAAU,UAAYhG,KAAK,UAAauI,GAAU,UAI3F,cAAC,GAAD,CAAUnM,MAAOA,EAAO2L,MAAO,EAA/B,UACIgD,GAAaE,EAAM1G,KAAI,SAAC6E,GAAD,OACvB,eAACkC,GAAA,EAAD,CAAMb,UAAU,MAAhB,UACE,eAACc,GAAA,EAAD,CAAUC,QAAM,EAAC9L,QAAS,WAAQyL,EAAY/B,EAAKrM,MAAnD,UACE,cAAC0O,GAAA,EAAD,CACEC,UACE,cAAC,IAAMC,SAAP,UACE,eAACxM,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,eAACD,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAG6E,UAAS,UAAKqG,EAAO,GAAK,SAA5C,UACE,cAACrC,EAAA,EAAD,CACEmC,UAAU,OACV1E,MAAM,cAFR,iBAMCqD,EAAK7B,GAAGhD,KAAI,SAACqH,GAAD,iBACPA,EADO,cAIf,eAACzM,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAG6E,UAAS,UAAKqG,EAAO,GAAK,SAA5C,UACE,cAACrC,EAAA,EAAD,CACEmC,UAAU,OACV1E,MAAM,cAFR,sBAKC,IAAKqD,EAAKvF,WAGb,eAAC1E,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAf,UACE,cAAC6I,EAAA,EAAD,CACEmC,UAAU,OACV1E,MAAM,cAFR,mBAKC,IAAKqD,EAAKjI,eAQpBwJ,EAAO,cAAC,KAAD,IAAiB,cAAC,KAAD,OAG3B,cAACkB,GAAA,EAAD,CAAUC,GAAI1C,EAAKrM,MAAQ8N,EAAYkB,QAAQ,OAAOC,eAAa,EAAnE,SACE,cAACV,GAAA,EAAD,CAAMb,UAAU,MAAMwB,gBAAc,EAApC,SAGE,cAACR,GAAA,EAAD,UACE,eAACvM,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACkF,UAAU,QAA1B,UACE,eAACnF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGE,GAAI,EAAtB,UACE,cAAC6I,EAAA,EAAD,CACEmC,UAAU,OACV1E,MAAM,cAFR,iBAMCqD,EAAK5B,GAAGjD,KAAI,SAACqH,GAAD,iBACPA,EADO,WAKf,eAACzM,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGE,GAAI,EAAtB,UACE,cAACK,EAAA,EAAD,CAAQC,QAAQ,WAAWV,GAAG,UAAUK,QAAS,WAxH1D,IAACL,IAwH0E+J,EAAKrM,IAvH/FpB,MAAM,+CAAD,OAAgD0D,GAAM,CACzDrC,OAAQ,MACRI,QAAS,CACP,eAAgB,sBAGjBX,MAAK,SAAAb,GAAQ,OAAIA,EAASC,UAAQY,MAAK,SAAAX,GACtCI,QAAQC,IAAIL,GAGZmD,EAAQU,KAAK,CACXuM,SAAU,YACV7E,MAAOvL,OAGVuB,OAAM,SAAAC,GAASpB,QAAQC,IAAImB,OAwGyE4L,QAAS,cAAC,KAAD,IAAxF,uBAGA,cAACpJ,EAAA,EAAD,CAAQC,QAAQ,WAAWV,GAAG,SAAS0G,MAAM,YAAYmD,QAAS,cAAC,KAAD,IAAgBxJ,QAAS,WAAK0L,EAAQhC,EAAKrM,MAA7G,+BAOJ,cAACuL,EAAA,EAAD,CACMmC,UAAU,OACV1E,MAAM,cAFZ,kBAMKqD,EAAK3B,IAAIlD,KAAI,SAACqH,GAAD,iBACRA,EADQ,QAIlB,cAACzH,EAAA,EAAD,CAAMvE,MAAO,CAAEa,QAAS,SAAxB,SACG2I,EAAKnM,wBAYtB,cAAC,GAAD,CAAUb,MAAOA,EAAO2L,MAAO,EAA/B,UACEgD,GAAaE,EAAM1G,KAAI,SAAC6E,GAAD,MACL,IAAlBA,EAAK+C,UACH,eAACb,GAAA,EAAD,CAAMb,UAAU,MAAhB,UACE,eAACc,GAAA,EAAD,CAAUC,QAAM,EAAC9L,QAAS,WAAQyL,EAAY/B,EAAKrM,MAAnD,UACE,cAAC0O,GAAA,EAAD,CACEC,UACE,cAAC,IAAMC,SAAP,UACE,eAACxM,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,eAACD,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAG6E,UAAS,UAAKqG,EAAO,GAAK,SAA5C,UACE,cAACrC,EAAA,EAAD,CACEmC,UAAU,OACV1E,MAAM,cAFR,iBAMCqD,EAAK7B,GAAGhD,KAAI,SAACqH,GAAD,iBACPA,EADO,cAIf,eAACzM,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAG6E,UAAS,UAAKqG,EAAO,GAAK,SAA5C,UACE,cAACrC,EAAA,EAAD,CACEmC,UAAU,OACV1E,MAAM,cAFR,sBAKC,IAAKqD,EAAKvF,WAGb,eAAC1E,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAf,UACE,cAAC6I,EAAA,EAAD,CACEmC,UAAU,OACV1E,MAAM,cAFR,mBAKC,IAAKqD,EAAKjI,eAQpBwJ,EAAO,cAAC,KAAD,IAAiB,cAAC,KAAD,OAG3B,cAACkB,GAAA,EAAD,CAAUC,GAAI1C,EAAKrM,MAAQ8N,EAAYkB,QAAQ,OAAOC,eAAa,EAAnE,SACE,cAACV,GAAA,EAAD,CAAMb,UAAU,MAAMwB,gBAAc,EAApC,SAGE,cAACR,GAAA,EAAD,UACE,eAACvM,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACkF,UAAU,QAA1B,UACE,eAACnF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGE,GAAI,EAAtB,UACE,cAAC6I,EAAA,EAAD,CACEmC,UAAU,OACV1E,MAAM,cAFR,iBAMCqD,EAAK5B,GAAGjD,KAAI,SAACqH,GAAD,iBACPA,EADO,WAKf,eAACzM,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGE,GAAI,EAAtB,UACE,cAAC6I,EAAA,EAAD,CACEmC,UAAU,OACV1E,MAAM,cAFR,kBAMCqD,EAAK3B,IAAIlD,KAAI,SAACqH,GAAD,iBACRA,EADQ,WAYhB,eAACzM,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGE,GAAI,EAAtB,UACE,cAAC6I,EAAA,EAAD,CACEmC,UAAU,OACV1E,MAAM,cAFR,wBAMC,IAAKqD,EAAK+C,gBAMf,cAAChI,EAAA,EAAD,CAAMvE,MAAO,CAAEa,QAAS,SAAxB,SACG2I,EAAKnM,mBAQP,mBC/XVmP,OAlBf,WAEE,OACE,cAACvR,EAAD,UACE,cAAC,IAAD,UACI,eAAC,IAAD,WACE,cAAC,IAAD,CAAOwR,OAAK,EAACC,KAAK,IAAI7B,UAAWjC,KACjC,cAAC,IAAD,CAAO8D,KAAK,cAAc7B,UAAW1J,IACrC,cAAC,IAAD,CAAOuL,KAAK,aAAa7B,UAAYC,KACrC,cAAC,IAAD,CAAO4B,KAAK,YAAY7B,UAAY5C,YCVjC0E,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBhQ,MAAK,YAAkD,IAA/CiQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.e1773632.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyDhIWL8C9y4DEZQvRwqhxHy8LR4yP98-Vo\",\n    authDomain: \"mailman-9a4f3.firebaseapp.com\",\n    projectId: \"mailman-9a4f3\",\n    storageBucket: \"mailman-9a4f3.appspot.com\",\n    messagingSenderId: \"1019293022905\",\n    appId: \"1:1019293022905:web:0c98719d1c4824e3173968\",\n    measurementId: \"G-EHLE8GGH05\"\n  };\n  // Initialize Firebase\n  const app = firebase.initializeApp(firebaseConfig);\n\n  export const auth = app.auth()\n  export default app;","import React, { useContext, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport firebase from \"firebase/app\";\nimport { auth } from \"../firebase\";\nimport axios from \"axios\";\n\nconst AuthContext = React.createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nfunction addUserDetails(name, email) {\n  const sdata = {\n    _id: email,\n    displayName: name,\n  };\n  fetch(\"https://mailman-backend.herokuapp.com/users\", {\n    method: \"POST\",\n    body: JSON.stringify(sdata),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  }).catch((err) => {\n    console.log(err);\n  });\n  return true;\n}\n\n\n\n\nexport function AuthProvider({ children }) {\n  const history = useHistory();\n  const [currentUser, setCurrentUser] = useState();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [displayName, setDisplayName] = useState(\"\")\n\n  async function getusername(email){\n    var response = await fetch(`https://mailman-backend.herokuapp.com/${email}`)\n    var data = await response.json()\n    setDisplayName(data.user.displayName)\n  }\n  \n\n  function Gsignup() {\n    var provider = new firebase.auth.GoogleAuthProvider();\n    // console.log(provider)\n    return firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then((result) => {\n        var user = result.user;\n        setDisplayName(user.displayName)\n        if (result.additionalUserInfo.isNewUser) {\n          addUserDetails(user.displayName, user.email);\n        }\n      }).then(() => {\n        setError(\"\");\n      });\n  }\n\n  function emailSignup(email, password) {\n    return auth.createUserWithEmailAndPassword(email, password);\n  }\n\n  function emailLogin(email, password) {\n    return auth\n      .signInWithEmailAndPassword(email, password)\n      .then(() => {\n        getusername(email)\n        setError(\"\");\n      })\n      .catch((err) => {\n        setError(\"Enter correct credentials\");\n      });\n  }\n\n  function logout() {\n    return auth.signOut();\n  }\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      setCurrentUser(user);\n      console.log(user);\n      setLoading(false);\n      // if (user != null)\n      //   console.log(user.additionalUserInfo)\n    });\n\n    return unsubscribe;\n  }, []);\n  console.log(displayName)\n  const value = {\n    currentUser,\n    Gsignup,\n    emailLogin,\n    emailSignup,\n    error,\n    logout,\n    displayName\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}\n","import ReactDOM from 'react-dom';\nimport Modal from 'react-modal';\nimport './LogIn.css'\nimport { useState, useRef, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom'\nimport TextField from '@material-ui/core/TextField';\nimport { useAuth } from '../../contexts/AuthContext';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport AppBar from '@material-ui/core/AppBar';\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\n\nModal.setAppElement('#root')\n\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\nconst useStyles = makeStyles((theme) => ({\n\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: \"-1rem\"\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n        backgroundColor: \"#3EBDF1\",\n    },\n    root: {\n        flexGrow: 1,\n        marginTop: \"1rem\",        \n        backgroundColor: \"white\",        \n        boxShadow: 'none',\n    \n    },\n}));\n\n\n\nconst LogIn = () => {\n    const [resultId, setResultId] = useState(\"\")\n    const history = useHistory()\n    const [pass, setPass] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const { Gsignup,emailLogin,emailSignup, } = useAuth()\n    const [value, setValue] = useState(0);\n\n    function clickhandler(e) {\n        e.preventDefault()\n        Gsignup()\n    }\n     function Echange(e){\n        setEmail(e.target.value)\n     }\n     function Pchange(e){\n        setPass(e.target.value)\n     }\n    function loginHandle(e){\n            e.preventDefault()\n            emailLogin(email,pass)\n                setEmail(\"\")\n                setPass(\"\")                     \n        }\n\n    function signupHandle(e){\n        e.preventDefault()\n        emailSignup(email,pass)          \n        console.log(email)\n        console.log(pass)\n        setEmail(\"\")\n        setPass(\"\")\n    }\n    const classes = useStyles();\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n\n    return (\n        <div>\n            <Modal isOpen={true} onRequestClose={() => history.push(\"/home\")} contentLabel=\"My dialog\" className=\"myLmodal\" overlayClassName=\"myLoverlay\"   >\n\n                <Container fixed>\n\n                    {/* HEADER */}\n                    <Grid container>\n                        <Grid item lg={2} sm={2}>\n                            <p onClick={() => history.push(\"/\")}>\n                                <IconButton aria-label=\"delete\" >\n                                    <ArrowBackIosIcon style={{ color: \"#3EBDF1\" }} />\n                                </IconButton>\n                            </p>\n                        </Grid>\n                        <Grid item lg={10} sm={6}>                            \n                            <AppBar position=\"static\" className={classes.root}>\n                                <Tabs value={value} \n                                \n                                onChange={handleChange} \n                                aria-label=\"simple tabs example\" \n                                indicatorColor=\"primary\"\n                                textColor=\"primary\"\n                                centered>\n                                    <Tab label=\"Login\" {...a11yProps(0)} />\n                                    <Tab label=\"Signup\" {...a11yProps(1)} />\n\n                                </Tabs>\n                            </AppBar>\n                        </Grid>\n                    </Grid>\n\n\n                    <TabPanel value={value} index={0}>\n                        <form className={classes.form} noValidate>\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                                value = {email}\n                                autoFocus\n                                onChange={Echange}\n                            />\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                                value = {pass}\n                                onChange = {Pchange}\n                            />\n\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}\n                                onClick={loginHandle}\n                            >\n                                LogIn\n                            </Button>\n                            <p className=\"or\">-OR-</p>\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}\n                                onClick={clickhandler}\n                                style={{height:\"3rem\"}}\n                            >\n                                \n                                <i class=\"fab fa-google\" style={{fontSize:\"1.5rem\", marginRight: \".5rem\"}} ></i>\n                                Continue with google\n                            </Button>\n                            \n\n                        </form>\n                    </TabPanel>\n                    <TabPanel value={value} index={1}>\n                    <form className={classes.form} noValidate>\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                                value = {email}\n                                autoFocus\n                                onChange={Echange}\n                            />\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                                value = {pass}\n                                onChange = {Pchange}\n                            />\n\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}\n                                onClick={signupHandle}\n                            >\n                                Signup\n                            </Button>\n                            <p className=\"or\">-OR-</p>\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                className={classes.submit}\n                                onClick={clickhandler}\n                                style={{height:\"3rem\"}}\n                            >\n                                <i class=\"fab fa-google\" style={{fontSize:\"1.5rem\", marginRight: \".5rem\"}} ></i>\n                                Continue with google\n                            </Button>\n\n                        </form>\n                    </TabPanel>\n\n                </Container>\n\n            </Modal>\n        </div >\n    );\n}\n\nexport default LogIn;","import React from 'react'\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport { Grid, Button } from '@material-ui/core';\r\nimport {  useHistory } from 'react-router-dom'\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport './navbar.css'\r\n\r\nfunction Navbar({page}) {\r\n    const history = useHistory()\r\n    const { currentUser,logout } = useAuth();\r\n    function handlelogout(e){\r\n        e.preventDefault()\r\n        logout()\r\n        history.push('/')\r\n    }\r\n    \r\n    return (\r\n        <Container>\r\n            <Grid container id=\"nav\" >\r\n                <Grid item lg={8} sm={7} xs={6}>\r\n                    <span onClick={()=>{history.push(\"/dashboard\")}} id=\"navhead\" style={{cursor:\"pointer\"}} >\r\n                        Mailman\r\n                    </span>\r\n                </Grid>\r\n                { page==\"dashboard\"?(\r\n                <Grid item lg={2} sm={3} xs={4} >\r\n                    <Button variant=\"contained\" id=\"composebtn\" href=\"/createMail\">\r\n                        Compose Mail\r\n                    </Button>\r\n                </Grid>):\r\n                <Grid item lg={2} sm={3} xs={1}>\r\n                </Grid>}\r\n                \r\n                {currentUser ? (\r\n                    <Grid item lg={2} sm={2} xs={2}>\r\n                        <Button variant=\"outlined\" id=\"logoutbtn\" onClick={handlelogout}>\r\n                            Logout\r\n                        </Button>\r\n                    </Grid>\r\n                ) : (\r\n                    <Grid item xs={2} >\r\n                    \r\n                </Grid>\r\n                )}\r\n\r\n            </Grid>\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\nexport default Navbar","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Modal from \"react-modal\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\n\r\nimport Navbar from \"../../components/navbar/navbar\";\r\nimport \"./createMail.css\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst dates = [\r\n  \"01\",\r\n  \"02\",\r\n  \"03\",\r\n  \"04\",\r\n  \"05\",\r\n  \"06\",\r\n  \"07\",\r\n  \"08\",\r\n  \"09\",\r\n  \"10\",\r\n  \"11\",\r\n  \"12\",\r\n  \"13\",\r\n  \"14\",\r\n  \"15\",\r\n  \"16\",\r\n  \"17\",\r\n  \"18\",\r\n  \"19\",\r\n  \"20\",\r\n  \"21\",\r\n  \"22\",\r\n  \"23\",\r\n  \"24\",\r\n  \"25\",\r\n  \"26\",\r\n  \"27\",\r\n  \"28\",\r\n  \"29\",\r\n  \"30\",\r\n  \"31\",\r\n];\r\n\r\nconst months = [\r\n  \"Jan\",\r\n  \"Feb\",\r\n  \"Mar\",\r\n  \"Apr\",\r\n  \"May\",\r\n  \"Jun\",\r\n  \"Jul\",\r\n  \"Aug\",\r\n  \"Sep\",\r\n  \"Oct\",\r\n  \"Nov\",\r\n  \"Dec\",\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    listStyle: \"none\",\r\n    padding: theme.spacing(0.5),\r\n    margin: 0,\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n}));\r\n\r\nconst weeks = [\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wednesday\",\r\n  \"Thursday\",\r\n  \"Friday\",\r\n  \"Saturday\",\r\n  \"Sunday\",\r\n];\r\n\r\nfunction CreateMail() {\r\n  const classes = useStyles();\r\n  let subtitle;\r\n  const [modalIsOpen, setIsOpen] = React.useState(false);\r\n  const { currentUser, displayName } = useAuth();\r\n  const history = useHistory()\r\n  const [type, setType] = React.useState(\"\");\r\n  const [daySelected, setDaySelected] = React.useState(\"\");\r\n  const [dateSelected, setDateSelected] = React.useState(\"\");\r\n  const [monthSelected, setMonthSelected] = React.useState(\"\");\r\n  const [timeSelected, setTimeSelected] = React.useState(\"\");\r\n  const [tovalue, setToValue] = React.useState(\"\");\r\n  const [tochip, setToChip] = React.useState([]);\r\n  const [ccvalue, setCcValue] = React.useState(\"\");\r\n  const [ccchip, setCcChip] = React.useState([]);\r\n  const [bccvalue, setBccValue] = React.useState(\"\");\r\n  const [bccchip, setBccChip] = React.useState([]);\r\n  const [name, setName] = React.useState(\"\")\r\n  const toRef = React.useRef(\"\");\r\n  const ccRef = React.useRef(\"\");\r\n  const bccRef = React.useRef(\"\");\r\n  const subRef = React.useRef(\"\");\r\n  const bodyRef = React.useRef(\"\");\r\n  console.log(displayName)\r\n\r\n  function isValid(email) {\r\n    let error = null;\r\n\r\n    if (isInList(email)) {\r\n      error = `${email} has already been added.`;\r\n    }\r\n\r\n    if (!isEmail(email)) {\r\n      error = `${email} is not a valid email address.`;\r\n    }\r\n\r\n    if (error) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n  console.log(tochip);\r\n\r\n  function isInList(email) {\r\n\r\n    if (tochip.includes(email)) {\r\n      return true\r\n    }\r\n    else if (ccchip.includes(email)) {\r\n      return true\r\n    }\r\n    else if (bccchip.includes(email)) {\r\n      return true\r\n    }\r\n    else {\r\n      return false\r\n    }\r\n\r\n  }\r\n\r\n  function isEmail(email) {\r\n    return /[\\w\\d\\.-]+@[\\w\\d\\.-]+\\.[\\w\\d\\.-]+/.test(email);\r\n  }\r\n\r\n  const selectday = (event) => {\r\n    // event.currentTarget.classList.add('selected');\r\n    if (daySelected === event.currentTarget.id) {\r\n      setDaySelected(\"\");\r\n    } else {\r\n      setDaySelected(event.currentTarget.id);\r\n    }\r\n  };\r\n\r\n  const handleToKeyDown = (event) => {\r\n    if ([\"Enter\", \"Tab\", \",\", \" \"].includes(event.key)) {\r\n      event.preventDefault();\r\n\r\n      var value = tovalue.trim();\r\n\r\n      if (value && isValid(value)) {\r\n        setToChip([...tochip, tovalue]);\r\n        setToValue(\"\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleBccKeyDown = (event) => {\r\n    if ([\"Enter\", \"Tab\", \",\"].includes(event.key)) {\r\n      event.preventDefault();\r\n\r\n      var value = bccvalue.trim();\r\n\r\n      if (value && isValid(value)) {\r\n        setBccChip([...bccchip, bccvalue]);\r\n        setBccValue(\"\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCcKeyDown = (event) => {\r\n    if ([\"Enter\", \" \", \",\"].includes(event.key)) {\r\n      event.preventDefault();\r\n\r\n      var value = ccvalue.trim();\r\n\r\n      if (value && isValid(value)) {\r\n        setCcChip([...ccchip, ccvalue]);\r\n        setCcValue(\"\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleBccPaste = (event) => {\r\n    event.preventDefault();\r\n    var paste = event.clipboardData.getData(\"text\");\r\n    var emails = paste.match(/[\\w\\d\\.-]+@[\\w\\d\\.-]+\\.[\\w\\d\\.-]+/g);\r\n\r\n    if (emails) {\r\n      var bccBeAdded = emails.filter((email) => !isInList(email));\r\n      setBccChip([...bccchip, ...bccBeAdded]);\r\n    }\r\n  };\r\n\r\n  const handleToPaste = (event) => {\r\n    event.preventDefault();\r\n    var paste = event.clipboardData.getData(\"text\");\r\n    var emails = paste.match(/[\\w\\d\\.-]+@[\\w\\d\\.-]+\\.[\\w\\d\\.-]+/g);\r\n\r\n    if (emails) {\r\n      var toBeAdded = emails.filter((email) => !isInList(email));\r\n      setToChip([...tochip, ...toBeAdded]);\r\n    }\r\n  };\r\n\r\n  const handleCcPaste = (event) => {\r\n    event.preventDefault();\r\n    var paste = event.clipboardData.getData(\"text\");\r\n    var emails = paste.match(/[\\w\\d\\.-]+@[\\w\\d\\.-]+\\.[\\w\\d\\.-]+/g);\r\n\r\n    if (emails) {\r\n      var ccBeAdded = emails.filter((email) => !isInList(email));\r\n      setCcChip([...ccchip, ...ccBeAdded]);\r\n    }\r\n  };\r\n\r\n  const handleCcChange = (event) => {\r\n    setCcValue(event.target.value);\r\n  };\r\n\r\n  const handleBccChange = (event) => {\r\n    setBccValue(event.target.value);\r\n  };\r\n\r\n  const handleToChange = (event) => {\r\n    setToValue(event.target.value);\r\n  };\r\n\r\n  const selectTime = (event) => {\r\n    setTimeSelected(event.target.value);\r\n  };\r\n\r\n  const selectDate = (event) => {\r\n    if (dateSelected === event.target.value) {\r\n      setDateSelected(\"\");\r\n    } else {\r\n      setDateSelected(event.target.value);\r\n    }\r\n  };\r\n  const selectMonth = (event) => {\r\n    if (monthSelected === event.target.value) {\r\n      setMonthSelected(\"\");\r\n    } else {\r\n      setMonthSelected(event.target.value);\r\n    }\r\n  };\r\n  console.log(timeSelected);\r\n  console.log(dateSelected);\r\n  console.log(daySelected);\r\n  console.log(monthSelected);\r\n  const handleChange = (event) => {\r\n    setType(event.target.value);\r\n  };\r\n\r\n  function openModal() {\r\n    setIsOpen(true);\r\n  }\r\n  function closeModal() {\r\n    setIsOpen(false);\r\n  }\r\n\r\n  const handleDelete = (chipToDelete) => () => {\r\n    setToChip((chips) => chips.filter((chip) => chip !== chipToDelete));\r\n  };\r\n\r\n  const handleCcDelete = (chipToDelete) => () => {\r\n    setCcChip((chips) => chips.filter((chip) => chip !== chipToDelete));\r\n  };\r\n\r\n  const handleBccDelete = (chipToDelete) => () => {\r\n    setBccChip((chips) => chips.filter((chip) => chip !== chipToDelete));\r\n  };\r\n\r\n\r\n  const addMail = () => {\r\n    var subject = subRef.current.value.trim();\r\n    var body = bodyRef.current.value.trim();\r\n    if (subject == \"\" || body == \"\") {\r\n      alert(\"Subject and body is required\")\r\n    } else {\r\n\r\n      const maildata = {\r\n        \"to\": tochip,\r\n        \"cc\": ccchip,\r\n        \"bcc\": bccchip,\r\n        \"subject\": subject,\r\n        \"body\": body,\r\n        \"day\": daySelected,\r\n        \"date\": dateSelected,\r\n        \"time\": timeSelected,\r\n        \"month\": monthSelected,\r\n        \"type\": type,\r\n        \"sender\": currentUser.email\r\n      }\r\n      console.log(maildata)\r\n      fetch('https://mailman-backend.herokuapp.com/mails', {\r\n        method: 'POST', // or 'PUT'\r\n        body: JSON.stringify(maildata),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        }\r\n\r\n      })\r\n        .then(response => response.json()).then(data => {\r\n          console.log(data);\r\n          alert(data.message)\r\n          toRef.current.value = \"\"\r\n          ccRef.current.value = \"\"\r\n          bccRef.current.value = \"\"\r\n          subRef.current.value = \"\"\r\n          bodyRef.current.value = \"\"\r\n          setDaySelected(\"\")\r\n          setDateSelected(\"\")\r\n          setTimeSelected(\"\")\r\n          setMonthSelected(\"\")\r\n          setType(\"\")\r\n          setToValue(\"\")\r\n          setCcValue(\"\")\r\n          setBccValue(\"\")\r\n          setToChip([])\r\n          setCcChip([])\r\n          setBccChip([])\r\n          history.push(\"/dashboard\")\r\n\r\n\r\n        })\r\n        .catch(err => { console.log(err) })\r\n    }\r\n  }\r\n\r\n\r\n  // var M\r\n  // document.addEventListener('DOMContentLoaded', function() {\r\n  //     var elems = document.querySelectorAll('.chips');\r\n  //     var instances = M.Chips.init(elems, {});\r\n  //   })\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Container style={{ padding: \"2rem 0\" }}>\r\n        <Card style={{ padding: \"2rem \" }}>\r\n          <Container style={{ textAlign: \"left\", marginLeft: \"3rem\" }}>\r\n            <Grid container style={{ paddingBottom: \"1rem\" }}>\r\n              <Grid item xs={1}>\r\n                <label>To:</label>\r\n              </Grid>\r\n              <Grid item xs={11} style={{ paddingBottom: \"1rem\" }}>\r\n                <Grid container>\r\n                  <Grid item xs={12}>\r\n                    <div className={classes.root}>\r\n                      {tochip.map((chip) => {\r\n                        let icon;\r\n\r\n                        return (\r\n                          <li key={chip}>\r\n                            <Chip\r\n                              icon={icon}\r\n                              label={chip}\r\n                              onDelete={handleDelete(chip)}\r\n                              className={classes.chip}\r\n                            />\r\n                          </li>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Input\r\n                      value={tovalue}\r\n                      inputRef={toRef}\r\n                      placeholder=\"Press Enter, Spacebar or , after typing mail\"\r\n                      onKeyDown={handleToKeyDown}\r\n                      onChange={handleToChange}\r\n                      onPaste={handleToPaste}\r\n                      style={{ width: \"90%\" }}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={11} style={{ paddingBottom: \"1rem\" }}></Grid>\r\n            </Grid>\r\n            <Grid container style={{ paddingBottom: \"1rem\" }}>\r\n              <Grid item xs={1}>\r\n                <label>CC:</label>\r\n              </Grid>\r\n              <Grid item xs={11} style={{ paddingBottom: \"1rem\" }}>\r\n                <Grid container>\r\n                  <Grid item xs={12}>\r\n                    <div className={classes.root}>\r\n                      {ccchip.map((chip) => {\r\n                        let icon;\r\n\r\n                        return (\r\n                          <li key={chip}>\r\n                            <Chip\r\n                              icon={icon}\r\n                              label={chip}\r\n                              onDelete={handleCcDelete(chip)}\r\n                              className={classes.chip}\r\n                            />\r\n                          </li>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Input\r\n                      value={ccvalue}\r\n                      inputRef={ccRef}\r\n                      placeholder=\"Press Enter, Spacebar or , after typing mail\"\r\n                      onKeyDown={handleCcKeyDown}\r\n                      onChange={handleCcChange}\r\n                      onPaste={handleCcPaste}\r\n                      style={{ width: \"90%\" }}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container style={{ paddingBottom: \"1rem\" }}>\r\n              <Grid item xs={1}>\r\n                <label>BCC:</label>\r\n              </Grid>\r\n              <Grid item xs={11} style={{ paddingBottom: \"1rem\" }}>\r\n                <Grid container>\r\n                  <Grid item xs={12}>\r\n                    <div className={classes.root}>\r\n                      {bccchip.map((chip) => {\r\n                        let icon;\r\n\r\n                        return (\r\n                          <li key={chip}>\r\n                            <Chip\r\n                              icon={icon}\r\n                              label={chip}\r\n                              onDelete={handleBccDelete(chip)}\r\n                              className={classes.chip}\r\n                            />\r\n                          </li>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Input\r\n                      value={bccvalue}\r\n                      inputRef={bccRef}\r\n                      placeholder=\"Press Enter, Spacebar or , after typing mail\"\r\n                      onKeyDown={handleBccKeyDown}\r\n                      onChange={handleBccChange}\r\n                      onPaste={handleBccPaste}\r\n                      style={{ width: \"90%\" }}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container style={{ paddingBottom: \"1rem\" }}>\r\n              <Grid item xs={1}>\r\n                <label>Subject:</label>\r\n              </Grid>\r\n              <Grid item xs={11} style={{ paddingBottom: \"1rem\" }}>\r\n                <Input\r\n                  inputRef={subRef}\r\n                  placeholder=\"Subject\"\r\n                  style={{ width: \"90%\" }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container style={{ paddingBottom: \"1rem\" }}>\r\n              <Grid item xs={1}>\r\n                <label>Body:</label>\r\n              </Grid>\r\n              <Grid item xs={11} style={{ paddingBottom: \"1rem\" }}>\r\n                <Input\r\n                  placeholder=\"Body\"\r\n                  style={{ width: \"90%\" }}\r\n                  inputRef={bodyRef}\r\n                  multiline\r\n                  rows={6}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            {type === \"30secs\" ? (\r\n              <div>\r\n                <Grid container>\r\n                  <Grid item xs={8}>\r\n                    <span>Mail Scheduled For Every 30 Seconds</span>\r\n                  </Grid>\r\n                  <Grid item xs={4} style={{ textAlign: \"center\" }}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      onClick={openModal}\r\n                      style={{backgroundColor:\"#3ebdf1\" , color: \"cornsilk\", marginTop: \".6rem\"}}\r\n                    >\r\n                      Edit Schedule\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                  <Grid item xs={12} style={{ textAlign: \"center\" }}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      style={{backgroundColor:\"#3ebdf1\" , color: \"cornsilk\", marginTop: \".6rem\"}}\r\n                      onClick={addMail}\r\n                    >\r\n                      Schedule Mail\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            ) : type === \"Weekly\" && daySelected && timeSelected ? (\r\n              <div>\r\n                <Grid container>\r\n                  <Grid item xs={8}>\r\n                    <p>\r\n                      Mail Scheduled For Every Week on {daySelected} at{\" \"}\r\n                      {timeSelected}\r\n                    </p>\r\n                  </Grid>\r\n                  <Grid item xs={4} style={{ textAlign: \"center\" }}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      onClick={openModal}\r\n                      style={{backgroundColor:\"#3ebdf1\" , color: \"cornsilk\", marginTop: \".6rem\"}}\r\n                    >\r\n                      Edit Schedule\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                  <Grid item xs={12} style={{ textAlign: \"center\" }}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      style={{backgroundColor:\"#3ebdf1\" , color: \"cornsilk\", marginTop: \".6rem\"}}\r\n                      onClick={addMail}\r\n                    >\r\n                      Schedule Mail\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            ) : type === \"Monthly\" && dateSelected && timeSelected ? (\r\n              <div>\r\n                <Grid container>\r\n                  <Grid item xs={8}>\r\n                    <p>\r\n                      Mail Scheduled For Every Month on {dateSelected} at{\" \"}\r\n                      {timeSelected}\r\n                    </p>\r\n                  </Grid>\r\n                  <Grid item xs={4} style={{ textAlign: \"center\" }}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      onClick={openModal}\r\n                      style={{backgroundColor:\"#3ebdf1\" , color: \"cornsilk\", marginTop: \".6rem\"}}\r\n                    >\r\n                      Edit Schedule\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                  <Grid item xs={12} style={{ textAlign: \"center\" }}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      style={{backgroundColor:\"#3ebdf1\" , color: \"cornsilk\", marginTop: \".6rem\"}}\r\n                      onClick={addMail}\r\n                    >\r\n                      Schedule Mail\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            ) : type === \"Yearly\" &&\r\n              dateSelected &&\r\n              monthSelected &&\r\n              timeSelected ? (\r\n              <div>\r\n                <Grid container>\r\n                  <Grid item xs={8}>\r\n                    <p>\r\n                      Mail Scheduled For Every Year on {dateSelected}{\" \"}\r\n                      {monthSelected} at {timeSelected}\r\n                    </p>\r\n                  </Grid>\r\n                  <Grid item xs={4} style={{ textAlign: \"center\" }}>\r\n                    <Button\r\n                      style={{backgroundColor:\"#3ebdf1\" , color: \"cornsilk\", marginTop: \".6rem\"}}\r\n                      variant=\"contained\"\r\n                      onClick={openModal}\r\n                      color=\"primary\"\r\n                    >\r\n                      Edit Schedule\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                  <Grid item xs={12} style={{ textAlign: \"center\" }}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      style={{backgroundColor:\"#3ebdf1\" , color: \"cornsilk\", marginTop: \".6rem\"}}\r\n                      onClick={addMail}\r\n                    >\r\n                      Schedule Mail\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            ) : (\r\n              <Grid container>\r\n                <Grid item style={{ textAlign: \"center\" }} xs={12}>\r\n                  <Button\r\n                  style={{backgroundColor:\"#3ebdf1\" , color: \"cornsilk\", marginTop: \".6rem\",fontSize:\"1.2rem\"}}\r\n                    variant=\"contained\"\r\n                    onClick={openModal}                    \r\n                    \r\n                  >\r\n                    Select Schedule\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n          </Container>\r\n\r\n          {/* <TextField\r\n              InputLabelProps={{ shrink: true }}\r\n                style={{\r\n                  width: \"100%\",\r\n                }}\r\n                id=\"standard-helperText\"\r\n                label=\"\"\r\n                defaultValue=\"\"\r\n                variant=\"outlined\"\r\n              /> */}\r\n          {/* <div class=\"input-field col s12\">\r\n                  <div id=\"tech_stack\" class=\"chips chips-placeholder\"></div>\r\n                </div> */}\r\n          {/* </Grid>\r\n            </Grid> */}\r\n          {/* <Grid item xs={12} style={{ paddingBottom: \"1rem\" }}>\r\n              <TextField\r\n                style={{\r\n                  width: \"80%\",\r\n                }}\r\n                id=\"standard-helperText\"\r\n                label=\"CC\"\r\n                defaultValue=\"\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} style={{ paddingBottom: \"1rem\" }}>\r\n              <TextField\r\n                style={{\r\n                  width: \"80%\",\r\n                }}\r\n                id=\"standard-helperText\"\r\n                label=\"Subject\"\r\n                defaultValue=\"\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} style={{ paddingBottom: \"1rem\" }}>\r\n              <TextField\r\n                style={{\r\n                  width: \"80%\",\r\n                }}\r\n                id=\"outlined-multiline-static\"\r\n                label=\"Body\"\r\n                multiline\r\n                rows={7}\r\n                defaultValue=\"\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n          </Grid> */}\r\n        </Card>\r\n      </Container>\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        onRequestClose={closeModal}\r\n        contentLabel=\"My dialog\"\r\n        className=\"mymodal\"\r\n        overlayClassName=\"myoverlay\"\r\n      >\r\n        <Container style={{ textAlign: \"center\" }}>\r\n          <Grid container style={{padding: \".5rem\"}}>\r\n            <Grid item xs={6} style={{color:\"#3ebdf1\", fontSize:\"1.4em\"}}>\r\n              Send Mail Every\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={type}\r\n                onChange={handleChange}\r\n                style={{ width: \"80%\" }}\r\n              >\r\n                <MenuItem value=\"30secs\">Thirty Seconds</MenuItem>\r\n                <MenuItem value=\"Weekly\">Week</MenuItem>\r\n                <MenuItem value=\"Monthly\">Month</MenuItem>\r\n                <MenuItem value=\"Yearly\">Year</MenuItem>\r\n              </Select>\r\n            </Grid>\r\n          </Grid>\r\n          {type === \"Weekly\" ? (\r\n            <div>\r\n              <Grid container >\r\n                <Grid item xs={12} style={{color:\"#3ebdf1\", fontSize:\"1.4em\"}}>\r\n                  <span>Select A Day</span>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container justify=\"center\" style={{ textAlign: \"center\" }}>\r\n                {weeks.map((day) => (\r\n                  <Grid item xs={3}>\r\n                    <div\r\n                      style={{\r\n                        margin: \"0.5rem\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                      id={day}\r\n                      key={day}\r\n                      onClick={selectday}\r\n                      className={`${daySelected === day ? \"selected\" : \"\"\r\n                        } btn dayclass`}\r\n                    >\r\n                      {day}\r\n                    </div>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n              <Grid container >\r\n                <Grid item xs={12} style={{color:\"#3ebdf1\", fontSize:\"1.4em\"}}>\r\n                  <span>Select Time</span>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    id=\"time\"\r\n                    label=\"\"\r\n                    type=\"time\"\r\n                    defaultValue={timeSelected}\r\n                    onChange={selectTime}\r\n                    className={classes.textField}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    inputProps={{\r\n                      step: 300, // 5 min\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {type === \"Monthly\" ? (\r\n            <div>\r\n              <Grid container style={{padding: \"1rem\"}}> \r\n                <Grid item xs={6} style={{color:\"#3ebdf1\", fontSize:\"1.4em\"}}>\r\n                  <span>Select A Date</span>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={dateSelected}\r\n                    onChange={selectDate}\r\n                    style={{ width: \"80%\" }}\r\n                  >\r\n                    {dates.map((date) => (\r\n                      <MenuItem value={date} id={date} key={date}>\r\n                        {date}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container style={{padding: \"1rem\"}}>\r\n                <Grid item xs={6} style={{color:\"#3ebdf1\", fontSize:\"1.4em\"}}>\r\n                  <span>Select Time</span>\r\n                </Grid>\r\n\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    id=\"time\"\r\n                    label=\"\"\r\n                    type=\"time\"\r\n                    onChange={selectTime}\r\n                    defaultValue={timeSelected}\r\n                    className={classes.textField}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    inputProps={{\r\n                      step: 300, // 5 min\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {type === \"Yearly\" ? (\r\n            <div>\r\n              <Grid container style={{padding: \"1rem\"}}>\r\n                <Grid item xs={6} style={{color:\"#3ebdf1\", fontSize:\"1.4em\"}}>\r\n                  <span>Select A Date</span>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={dateSelected}\r\n                    onChange={selectDate}\r\n                    style={{ width: \"80%\" }}\r\n                  >\r\n                    {dates.map((date) => (\r\n                      <MenuItem value={date} id={date} key={date}>\r\n                        {date}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container style={{padding: \"1rem\"}}>\r\n                <Grid item xs={6} style={{color:\"#3ebdf1\", fontSize:\"1.4em\"}}>\r\n                  Select A Month\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={monthSelected}\r\n                    onChange={selectMonth}\r\n                    style={{ width: \"80%\" }}\r\n                  >\r\n                    {months.map((month) => (\r\n                      <MenuItem value={month} id={month} key={month}>\r\n                        {month}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container style={{padding: \"1rem\"}}>\r\n                <Grid item xs={6} style={{color:\"#3ebdf1\", fontSize:\"1.4em\"}}>\r\n                  <span>Select Time</span>\r\n                </Grid>\r\n\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    id=\"time\"\r\n                    label=\"\"\r\n                    type=\"time\"\r\n                    onChange={selectTime}\r\n                    defaultValue={timeSelected}\r\n                    className={classes.textField}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    inputProps={{\r\n                      step: 300, // 5 min\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {type ? (\r\n            <Grid container>\r\n              <Grid item xs={12}>\r\n                <Button variant=\"contained\" id=\"cntbtn\" onClick={closeModal}>Continue</Button>\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Container>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateMail;\r\n","import React, { useState } from \"react\";\nimport { useHistory } from 'react-router-dom'\nimport Container from \"@material-ui/core/Container\";\nimport Card from \"@material-ui/core/Card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Input from \"@material-ui/core/Input\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Modal from \"react-modal\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport Navbar from \"../../components/navbar/navbar\";\nimport \"./editMail.css\";\n\nModal.setAppElement(\"#root\");\n\nconst dates = [\n  \"01\",\n  \"02\",\n  \"03\",\n  \"04\",\n  \"05\",\n  \"06\",\n  \"07\",\n  \"08\",\n  \"09\",\n  \"10\",\n  \"11\",\n  \"12\",\n  \"13\",\n  \"14\",\n  \"15\",\n  \"16\",\n  \"17\",\n  \"18\",\n  \"19\",\n  \"20\",\n  \"21\",\n  \"22\",\n  \"23\",\n  \"24\",\n  \"25\",\n  \"26\",\n  \"27\",\n  \"28\",\n  \"29\",\n  \"30\",\n  \"31\",\n];\n\nconst months = [\n  \"Jan\",\n  \"Feb\",\n  \"Mar\",\n  \"Apr\",\n  \"May\",\n  \"Jun\",\n  \"Jul\",\n  \"Aug\",\n  \"Sep\",\n  \"Oct\",\n  \"Nov\",\n  \"Dec\",\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    listStyle: \"none\",\n    padding: theme.spacing(0.5),\n    margin: 0,\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n}));\n\nconst weeks = [\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\",\n  \"Sunday\",\n];\n\nfunction EditMail(props) {\n  const classes = useStyles();\n  let subtitle;\n  const { currentUser } = useAuth();\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  const [type, setType] = React.useState(props.location.state.type);\n  const [daySelected, setDaySelected] = React.useState(\n    props.location.state.day || \"\"\n  );\n  const [dateSelected, setDateSelected] = React.useState(\n    props.location.state.date || \"\"\n  );\n  const [monthSelected, setMonthSelected] = React.useState(\n    props.location.state.month || \"\"\n  );\n  const [timeSelected, setTimeSelected] = React.useState(\n    props.location.state.time || \"\"\n  );\n  const history = useHistory()\n  const [tovalue, setToValue] = React.useState(\"\");\n  const [tochip, setToChip] = React.useState(props.location.state.to);\n  const [ccvalue, setCcValue] = React.useState(\"\");\n  const [ccchip, setCcChip] = React.useState(props.location.state.cc);\n  const [bccvalue, setBccValue] = React.useState(\"\");\n  const [bccchip, setBccChip] = React.useState(props.location.state.bcc);\n  const [subject, setSubject] = React.useState(props.location.state.subject);\n  const [body, setBody] = React.useState(props.location.state.body);\n  var mailId = props.location.state._id;\n  \n\n\n  function isValid(email) {\n    let error = null;\n\n    if (isInList(email)) {\n      error = `${email} has already been added.`;\n    }\n\n    if (!isEmail(email)) {\n      error = `${email} is not a valid email address.`;\n    }\n\n    if (error) {\n      return false;\n    }\n\n    return true;\n  }\n  // console.log(tochip);\n\n  function isInList(email) {\n    if (tochip.includes(email)) {\n      return true;\n    } else if (ccchip.includes(email)) {\n      return true;\n    } else if (bccchip.includes(email)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  function isEmail(email) {\n    return /[\\w\\d\\.-]+@[\\w\\d\\.-]+\\.[\\w\\d\\.-]+/.test(email);\n  }\n\n  const handleToKeyDown = (event) => {\n    if ([\"Enter\", \" \", \",\"].includes(event.key)) {\n      event.preventDefault();\n\n      var value = tovalue.trim();\n\n      if (value && isValid(value)) {\n        setToChip([...tochip, tovalue]);\n        setToValue(\"\");\n      }\n    }\n  };\n\n  const handleBccKeyDown = (event) => {\n    if ([\"Enter\", \"Tab\", \",\",\" \"].includes(event.key)) {\n      event.preventDefault();\n\n      var value = bccvalue.trim();\n\n      if (value && isValid(value)) {\n        setBccChip([...bccchip, bccvalue]);\n        setBccValue(\"\");\n      }\n    }\n  };\n\n  const handleCcKeyDown = (event) => {\n    if ([\"Enter\", \"Tab\", \",\",\" \"].includes(event.key)) {\n      event.preventDefault();\n\n      var value = ccvalue.trim();\n\n      if (value && isValid(value)) {\n        setCcChip([...ccchip, ccvalue]);\n        setCcValue(\"\");\n      }\n    }\n  };\n\n  const handleBccPaste = (event) => {\n    event.preventDefault();\n    var paste = event.clipboardData.getData(\"text\");\n    var emails = paste.match(/[\\w\\d\\.-]+@[\\w\\d\\.-]+\\.[\\w\\d\\.-]+/g);\n\n    if (emails) {\n      var bccBeAdded = emails.filter((email) => !isInList(email));\n      setBccChip([...bccchip, ...bccBeAdded]);\n    }\n  };\n\n  const handleToPaste = (event) => {\n    event.preventDefault();\n    var paste = event.clipboardData.getData(\"text\");\n    var emails = paste.match(/[\\w\\d\\.-]+@[\\w\\d\\.-]+\\.[\\w\\d\\.-]+/g);\n\n    if (emails) {\n      var toBeAdded = emails.filter((email) => !isInList(email));\n      setToChip([...tochip, ...toBeAdded]);\n    }\n  };\n\n  const handleCcPaste = (event) => {\n    event.preventDefault();\n    var paste = event.clipboardData.getData(\"text\");\n    var emails = paste.match(/[\\w\\d\\.-]+@[\\w\\d\\.-]+\\.[\\w\\d\\.-]+/g);\n\n    if (emails) {\n      var ccBeAdded = emails.filter((email) => !isInList(email));\n      setCcChip([...ccchip, ...ccBeAdded]);\n    }\n  };\n\n  const handleCcChange = (event) => {\n    setCcValue(event.target.value);\n  };\n\n  const handleBccChange = (event) => {\n    setBccValue(event.target.value);\n  };\n\n  const handleToChange = (event) => {\n    setToValue(event.target.value);\n  };\n\n  const handleDelete = (chipToDelete) => () => {\n    setToChip((chips) => chips.filter((chip) => chip !== chipToDelete));\n  };\n\n  const handleCcDelete = (chipToDelete) => () => {\n    setCcChip((chips) => chips.filter((chip) => chip !== chipToDelete));\n  };\n\n  const handleBccDelete = (chipToDelete) => () => {\n    setBccChip((chips) => chips.filter((chip) => chip !== chipToDelete));\n  };\n\n  const selectday = (event) => {\n    // event.currentTarget.classList.add('selected');\n    if (daySelected === event.currentTarget.id) {\n      setDaySelected(\"\");\n    } else {\n      setDaySelected(event.currentTarget.id);\n    }\n  };\n\n  const selectTime = (event) => {\n    setTimeSelected(event.target.value);\n  };\n\n  const selectDate = (event) => {\n    if (dateSelected === event.target.value) {\n      setDateSelected(\"\");\n    } else {\n      setDateSelected(event.target.value);\n    }\n  };\n  const selectMonth = (event) => {\n    if (monthSelected === event.target.value) {\n      setMonthSelected(\"\");\n    } else {\n      setMonthSelected(event.target.value);\n    }\n  };\n  // console.log(timeSelected);\n  // console.log(dateSelected);\n  // console.log(daySelected);\n  // console.log(monthSelected);\n  \n  const handlesubjectchange =(event) =>{\n    setSubject(event.target.value)\n  }\n  const handlebodychange =(event) =>{\n    setBody(event.target.value)\n  }\n  const handleChange = (event) => {\n    setType(event.target.value);\n  };\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = \"#f00\";\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n  const editMail = () => {\n    if (subject == \"\" || body == \"\") {\n      alert(\"Subject and body is required\")\n    } else {\n\n\n      const maildata = {\n        \"to\": tochip,\n        \"cc\": ccchip,\n        \"bcc\": bccchip,\n        \"subject\": subject,\n        \"body\": body,\n        \"day\": daySelected,\n        \"date\": dateSelected,\n        \"time\": timeSelected,\n        \"month\": monthSelected,\n        \"type\": type,\n        \"sender\": currentUser.email,\n        \"displayName\": currentUser.displayName\n        \n      }\n      console.log(maildata)\n      console.log(mailId)\n      fetch(`https://mailman-backend.herokuapp.com/mails/${mailId}`, {\n        method: 'PATCH', // or 'PUT'\n        body: JSON.stringify(maildata),\n        headers: {\n          'Content-Type': 'application/json',\n        }\n\n      })\n        .then(response => response.json()).then(data => {\n          console.log(data);\n          alert(data.message)         \n          \n          history.push(\"/dashboard\")\n\n\n        })\n        .catch(err => { console.log(err) })\n    }\n  }\n  // var M\n  // document.addEventListener('DOMContentLoaded', function() {\n  //     var elems = document.querySelectorAll('.chips');\n  //     var instances = M.Chips.init(elems, {});\n  //   })\n  return (\n    <div>\n      <Navbar />\n      <Container style={{ padding: \"2rem 0\" }}>\n        <Card style={{ padding: \"2rem \" }}>\n          <Container style={{ textAlign: \"left\", marginLeft: \"3rem\" }}>\n            <Grid container style={{ paddingBottom: \"1rem\" }}>\n              <Grid item xs={1}>\n                <label>To:</label>\n              </Grid>\n              <Grid item xs={11} style={{ paddingBottom: \"1rem\" }}>\n              <Grid container>\n                  <Grid item xs={12}>\n                    <div className={classes.root}>\n                      {tochip.map((chip) => {\n                        let icon;\n\n                        return (\n                          <li key={chip}>\n                            <Chip\n                              icon={icon}\n                              label={chip}\n                              onDelete={handleDelete(chip)}\n                              className={classes.chip}\n                            />\n                          </li>\n                        );\n                      })}\n                    </div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Input\n                      value={tovalue}\n                      // inputRef={toRef}\n                      placeholder=\"Press Enter, Spacebar or , after typing mail\"\n                      onKeyDown={handleToKeyDown}\n                      onChange={handleToChange}\n                      onPaste={handleToPaste}\n                      style={{ width: \"90%\" }}\n                    />\n                  </Grid>\n                </Grid>\n                {/* <Input\n                  defaultValue={props.location.state.to}\n                  placeholder=\"To\"\n                  style={{ width: \"90%\" }}\n                /> */}\n              </Grid>\n              <Grid item xs={11} style={{ paddingBottom: \"1rem\" }}></Grid>\n            </Grid>\n            <Grid container style={{ paddingBottom: \"1rem\" }}>\n              <Grid item xs={1}>\n                <label>CC:</label>\n              </Grid>\n              <Grid item xs={11} style={{ paddingBottom: \"1rem\" }}>\n                <Grid container>\n                  <Grid item xs={12}>\n                    <div className={classes.root}>\n                      {ccchip.map((chip) => {\n                        let icon;\n\n                        return (\n                          <li key={chip}>\n                            <Chip\n                              icon={icon}\n                              label={chip}\n                              onDelete={handleCcDelete(chip)}\n                              className={classes.chip}\n                            />\n                          </li>\n                        );\n                      })}\n                    </div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Input\n                      value={ccvalue}\n                      // inputRef={ccRef}\n                      placeholder=\"Press Enter, Spacebar or , after typing mail\"\n                      onKeyDown={handleCcKeyDown}\n                      onChange={handleCcChange}\n                      onPaste={handleCcPaste}\n                      style={{ width: \"90%\" }}\n                    />\n                    {/* <Input defaultValue={props.location.state.cc} placeholder=\"CC\" style={{ width: \"90%\" }} /> */}\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid container style={{ paddingBottom: \"1rem\" }}>\n              <Grid item xs={1}>\n                <label>BCC:</label>\n              </Grid>\n              <Grid item xs={11} style={{ paddingBottom: \"1rem\" }}>\n                <Grid container>\n                  <Grid item xs={12}>\n                    <div className={classes.root}>\n                      {bccchip.map((chip) => {\n                        let icon;\n\n                        return (\n                          <li key={chip}>\n                            <Chip\n                              icon={icon}\n                              label={chip}\n                              onDelete={handleBccDelete(chip)}\n                              className={classes.chip}\n                            />\n                          </li>\n                        );\n                      })}\n                    </div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Input\n                      value={bccvalue}\n                      // inputRef={bccRef}\n                      placeholder=\"Press Enter, Spacebar or , after typing mail\"\n                      onKeyDown={handleBccKeyDown}\n                      onChange={handleBccChange}\n                      onPaste={handleBccPaste}\n                      style={{ width: \"90%\" }}\n                    />\n                  </Grid>\n                </Grid>\n                {/* <Input\n                  defaultValue={props.location.state.bcc}\n                  placeholder=\"BCC\"\n                  style={{ width: \"90%\" }}\n                /> */}\n              </Grid>\n            </Grid>\n            <Grid container style={{ paddingBottom: \"1rem\" }}>\n              <Grid item xs={1}>\n                <label>Subject:</label>\n              </Grid>\n              <Grid item xs={11} style={{ paddingBottom: \"1rem\" }}>\n                <Input\n                  value={subject}\n                  onChange={handlesubjectchange}\n                  placeholder=\"Subject\"\n                  style={{ width: \"90%\" }}\n                />\n              </Grid>\n            </Grid>\n            <Grid container style={{ paddingBottom: \"1rem\" }}>\n              <Grid item xs={1}>\n                <label>Body:</label>\n              </Grid>\n              <Grid item xs={11} style={{ paddingBottom: \"1rem\" }}>\n                <Input\n                  placeholder=\"Body\"\n                  style={{ width: \"90%\" }}\n                  multiline\n                  rows={6}\n                  value={body}\n                onChange={handlebodychange}\n                />\n              </Grid>\n            </Grid>\n            {type === \"30secs\" ? (\n              <div>\n                <Grid container>\n                  <Grid item xs={8}>\n                    <span>Mail Scheduled For Every 30 Seconds</span>\n                  </Grid>\n                  <Grid item xs={4} style={{ textAlign: \"center\" }}>\n                    <Button\n                      variant=\"contained\"\n                      onClick={openModal}\n                      style={{backgroundColor:\"#3ebdf1\" , color: \"cornsilk\", marginTop: \".6rem\"}}\n                    >\n                      Edit Schedule\n                    </Button>\n                  </Grid>\n                </Grid>\n                <Grid container>\n                  <Grid item xs={12} style={{ textAlign: \"center\" }}>\n                    <Button variant=\"contained\" onClick={editMail} style={{backgroundColor:\"#3ebdf1\" , color: \"cornsilk\", marginTop: \".6rem\",fontSize:\"1.2rem\"}}>\n                      Edit Mail\n                    </Button>\n                  </Grid>\n                </Grid>\n              </div>\n            ) : type === \"Weekly\" && daySelected && timeSelected ? (\n              <div>\n                <Grid container>\n                  <Grid item xs={8}>\n                    <p>\n                      Mail Scheduled For Every Week on {daySelected} at{\" \"}\n                      {timeSelected}\n                    </p>\n                  </Grid>\n                  <Grid item xs={4} style={{ textAlign: \"center\" }}>\n                    <Button\n                      variant=\"contained\"\n                      onClick={openModal}\n                      style={{backgroundColor:\"#3ebdf1\" , color: \"cornsilk\", marginTop: \".6rem\"}}\n                    >\n                      Edit Schedule\n                    </Button>\n                  </Grid>\n                </Grid>\n                <Grid container>\n                  <Grid item xs={12} style={{ textAlign: \"center\" }}>\n                    <Button variant=\"contained\"  onClick={editMail} style={{backgroundColor:\"#3ebdf1\" , color: \"cornsilk\", marginTop: \".6rem\",fontSize:\"1.2rem\"}}>\n                      Edit Mail\n                    </Button>\n                  </Grid>\n                </Grid>\n              </div>\n            ) : type === \"Monthly\" && dateSelected && timeSelected ? (\n              <div>\n                <Grid container>\n                  <Grid item xs={8}>\n                    <p>\n                      Mail Scheduled For Every Month on {dateSelected} at{\" \"}\n                      {timeSelected}\n                    </p>\n                  </Grid>\n                  <Grid item xs={4} style={{ textAlign: \"center\" }}>\n                    <Button\n                      variant=\"contained\"\n                      onClick={openModal}\n                      style={{backgroundColor:\"#3ebdf1\" , color: \"cornsilk\", marginTop: \".6rem\"}}\n                    >\n                      Edit Schedule\n                    </Button>\n                  </Grid>\n                </Grid>\n                <Grid container>\n                  <Grid item xs={12} style={{ textAlign: \"center\" }}>\n                    <Button variant=\"contained\" onClick={editMail} style={{backgroundColor:\"#3ebdf1\" , color: \"cornsilk\", marginTop: \".6rem\",fontSize:\"1.2rem\"}}>\n                      Edit Mail\n                    </Button>\n                  </Grid>\n                </Grid>\n              </div>\n            ) : type === \"Yearly\" &&\n              dateSelected &&\n              monthSelected &&\n              timeSelected ? (\n              <div>\n                <Grid container>\n                  <Grid item xs={8}>\n                    <p>\n                      Mail Scheduled For Every Year on {dateSelected}{\" \"}\n                      {monthSelected} at {timeSelected}\n                    </p>\n                  </Grid>\n                  <Grid item xs={4} style={{ textAlign: \"center\" }}>\n                    <Button\n                      variant=\"contained\"\n                      onClick={openModal}\n                      style={{backgroundColor:\"#3ebdf1\" , color: \"cornsilk\", marginTop: \".6rem\"}}\n                    >\n                      Edit Schedule\n                    </Button>\n                  </Grid>\n                </Grid>\n                <Grid container>\n                  <Grid item xs={12} style={{ textAlign: \"center\" }}>\n                    <Button variant=\"contained\" onClick={editMail} style={{backgroundColor:\"#3ebdf1\" , color: \"cornsilk\", marginTop: \".6rem\",fontSize:\"1.2rem\"}}>\n                      Edit Mail\n                    </Button>\n                  </Grid>\n                </Grid>\n              </div>\n            ) : (\n              <Grid container>\n                <Grid item style={{ textAlign: \"center\" }} xs={12}>\n                  <Button\n                    variant=\"contained\"\n                    onClick={openModal}\n                    style={{backgroundColor:\"#3ebdf1\" , color: \"cornsilk\", marginTop: \".6rem\"}}\n                  >\n                    Select Schedule\n                  </Button>\n                </Grid>\n              </Grid>\n            )}\n          </Container>\n\n          {/* <TextField\n              InputLabelProps={{ shrink: true }}\n                style={{\n                  width: \"100%\",\n                }}\n                id=\"standard-helperText\"\n                label=\"\"\n                defaultValue=\"\"\n                variant=\"outlined\"\n              /> */}\n          {/* <div class=\"input-field col s12\">\n                  <div id=\"tech_stack\" class=\"chips chips-placeholder\"></div>\n                </div> */}\n          {/* </Grid>\n            </Grid> */}\n          {/* <Grid item xs={12} style={{ paddingBottom: \"1rem\" }}>\n              <TextField\n                style={{\n                  width: \"80%\",\n                }}\n                id=\"standard-helperText\"\n                label=\"CC\"\n                defaultValue=\"\"\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item xs={12} style={{ paddingBottom: \"1rem\" }}>\n              <TextField\n                style={{\n                  width: \"80%\",\n                }}\n                id=\"standard-helperText\"\n                label=\"Subject\"\n                defaultValue=\"\"\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item xs={12} style={{ paddingBottom: \"1rem\" }}>\n              <TextField\n                style={{\n                  width: \"80%\",\n                }}\n                id=\"outlined-multiline-static\"\n                label=\"Body\"\n                multiline\n                rows={7}\n                defaultValue=\"\"\n                variant=\"outlined\"\n              />\n            </Grid>\n          </Grid> */}\n        </Card>\n      </Container>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        contentLabel=\"My dialog\"\n        className=\"mymodal\"\n        overlayClassName=\"myoverlay\"\n      >\n        <Container style={{ textAlign: \"center\" }}>\n          <Grid container style={{\n                padding:\"0.5rem\"\n              }}>\n            <Grid item xs={6} style={{color:\"#3ebdf1\", fontSize:\"1.4rem\"}}>\n              Send Mail Every\n            </Grid>\n            <Grid item xs={6}>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={type}\n                onChange={handleChange}\n                style={{ width: \"80%\" }}\n              >\n                <MenuItem value=\"30secs\">Thirty Seconds</MenuItem>\n                <MenuItem value=\"Weekly\">Week</MenuItem>\n                <MenuItem value=\"Monthly\">Month</MenuItem>\n                <MenuItem value=\"Yearly\">Year</MenuItem>\n              </Select>\n            </Grid>\n          </Grid>\n          {type === \"Weekly\" ? (\n            <div>\n              <Grid container >\n                <Grid item xs={12} style={{color:\"#3ebdf1\", fontSize:\"1.4rem\"}}>\n                  <span>Select A Day</span>\n                </Grid>\n              </Grid>\n              <Grid container justify=\"center\" style={{ textAlign: \"center\" }}>\n                {weeks.map((day) => (\n                  <Grid item xs={3}>\n                    <div\n                      style={{\n                        margin: \"0.5rem\",\n                        cursor: \"pointer\",\n                      }}\n                      id={day}\n                      key={day}\n                      onClick={selectday}\n                      className={`${\n                        daySelected === day ? \"selected\" : \"\"\n                      } btn dayclass`}\n                    >\n                      {day}\n                    </div>\n                  </Grid>\n                ))}\n              </Grid>\n              <Grid container >\n                <Grid item xs={12} style={{color:\"#3ebdf1\", fontSize:\"1.4rem\"}}>\n                  <span>Select Time</span>\n                </Grid>\n              </Grid>\n              <Grid container>\n                <Grid item xs={12}>\n                  <TextField\n                    id=\"time\"\n                    label=\"\"\n                    type=\"time\"\n                    defaultValue={timeSelected}\n                    onChange={selectTime}\n                    className={classes.textField}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    inputProps={{\n                      step: 300, // 5 min\n                    }}\n                  />\n                </Grid>\n              </Grid>\n            </div>\n          ) : (\n            \"\"\n          )}\n          {type === \"Monthly\" ? (\n            <div>\n              <Grid container style={{\n                padding:\"1.5rem\"\n              }} className=\"textdiv\">\n                <Grid item xs={6} style={{color:\"#3ebdf1\", fontSize:\"1.4rem\"}}>\n                  <span>Select A Date</span>\n                </Grid>\n                <Grid item xs={6}>\n                  <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={dateSelected}\n                    onChange={selectDate}\n                    style={{ width: \"80%\" }}\n                  >\n                    {dates.map((date) => (\n                      <MenuItem value={date} id={date} key={date}>\n                        {date}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </Grid>\n              </Grid>\n              <Grid container style={{\n                padding:\"1.5rem\"\n              }}>\n                <Grid item xs={6} style={{color:\"#3ebdf1\", fontSize:\"1.4rem\"}}>\n                  <span>Select Time</span>\n                </Grid>\n\n                <Grid item xs={6}>\n                  <TextField\n                    id=\"time\"\n                    label=\"\"\n                    type=\"time\"\n                    onChange={selectTime}\n                    defaultValue={timeSelected}\n                    className={classes.textField}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    inputProps={{\n                      step: 300, // 5 min\n                    }}\n                  />\n                </Grid>\n              </Grid>\n            </div>\n          ) : (\n            \"\"\n          )}\n          {type === \"Yearly\" ? (\n            <div>\n              <Grid container style={{\n                padding:\"1.5rem\"\n              }}>\n                <Grid item xs={6} style={{color:\"#3ebdf1\", fontSize:\"1.4rem\"}}>\n                  <span>Select A Date</span>\n                </Grid>\n                <Grid item xs={6}>\n                  <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={dateSelected}\n                    onChange={selectDate}\n                    style={{ width: \"80%\" }}\n                  >\n                    {dates.map((date) => (\n                      <MenuItem value={date} id={date} key={date}>\n                        {date}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </Grid>\n              </Grid>\n              <Grid container >\n                <Grid item xs={6}style={{color:\"#3ebdf1\", fontSize:\"1.4rem\"}}>\n                  Select A Month\n                </Grid>\n                <Grid item xs={6}>\n                  <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={monthSelected}\n                    onChange={selectMonth}\n                    style={{ width: \"80%\" }}\n                  >\n                    {months.map((month) => (\n                      <MenuItem value={month} id={month} key={month}>\n                        {month}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </Grid>\n              </Grid>\n              <Grid container style={{\n                padding:\"1.5rem\"\n              }}>\n                <Grid item xs={6} style={{color:\"#3ebdf1\", fontSize:\"1.4rem\"}}>\n                  <span>Select Time</span>\n                </Grid>\n\n                <Grid item xs={6}>\n                  <TextField\n                    id=\"time\"\n                    label=\"\"\n                    type=\"time\"\n                    onChange={selectTime}\n                    defaultValue={timeSelected}\n                    className={classes.textField}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    inputProps={{\n                      step: 300, // 5 min\n                    }}\n                  />\n                </Grid>\n              </Grid>\n            </div>\n          ) : (\n            \"\"\n          )}\n          {type ? (\n            <Grid container>\n              <Grid item xs={12}>\n                <Button variant=\"contained\" onClick={closeModal} style={{backgroundColor:\"#3ebdf1\" , color: \"cornsilk\", marginTop: \".6rem\"}}>\n                  Continue\n                </Button>\n              </Grid>\n            </Grid>\n          ) : (\n            \"\"\n          )}\n        </Container>\n      </Modal>\n    </div>\n  );\n}\n\nexport default EditMail;\n","export default __webpack_public_path__ + \"static/media/mail.acf82e22.png\";","\nimport Navbar from \"../../components/navbar/navbar\";\nimport { Container, Grid, Button } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom'\nimport TextField from '@material-ui/core/TextField';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport AppBar from '@material-ui/core/AppBar';\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\nimport Modal from 'react-modal';\nimport mail from '../../images/mail.png'\nimport './Landing.css'\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nModal.setAppElement('#root')\n\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\nconst useStyles = makeStyles((theme) => ({\n\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: \"-1rem\"\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n        backgroundColor: \"#3EBDF1\",\n    },\n    root: {\n        flexGrow: 1,\n        marginTop: \"1rem\",\n        backgroundColor: \"white\",\n        boxShadow: 'none',\n\n    },\n}));\n\nconst Landing = () => {\n    const history = useHistory()\n    const [pass, setPass] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [name, setName] = useState(\"\")\n    const { Gsignup, emailLogin, emailSignup, currentUser,error } = useAuth()\n    const [value, setValue] = useState(0);\n    const [modalIsOpen, setIsOpen] = useState(false);\n\n    function openModal() {\n        setIsOpen(true);\n    }\n    function closeModal() {\n        setIsOpen(false);\n    }\n\n    async function clickhandler(e) {\n        e.preventDefault()\n        await Gsignup()\n        history.push('/dashboard');\n    }\n    function Echange(e) {\n        setEmail(e.target.value)\n    }\n    function Pchange(e) {\n        setPass(e.target.value)\n    }\n    function Nchange(e) {\n        setName(e.target.value)\n    }\n    async function loginHandle(e) {\n        e.preventDefault()\n        await emailLogin(email, pass)\n        \n        if (error==\"\"){\n            setEmail(\"\")\n            setPass(\"\")\n            history.push('/dashboard');\n        }\n        closeModal()\n        \n    }\n\n    function addUserDetail(name, email){\n        const sdata = {\n            \"_id\": email,\n            \"displayName\":name\n        }\n        fetch('https://mailman-backend.herokuapp.com/users', {\n        method: 'POST',\n        body: JSON.stringify(sdata),\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      }).catch(err=>{\n          console.log(err)\n      })\n      return true\n    }\n\n    async function signupHandle(e) {\n        e.preventDefault()\n        await emailSignup(email, pass)\n        await addUserDetail(name,email )\n        setEmail(\"\")\n        setPass(\"\")\n        history.push('/dashboard');\n    }\n    const classes = useStyles();\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n    console.log(error)\n    \n\n    return (\n        <div>\n            <Navbar page=\"landing\" />\n            <Container>\n                <Grid container className=\"cont\">\n                    <Grid item xs={8}>\n                        <div id=\"textdiv\">\n                            <h2 id=\"title1\"><i>Scheduling your mails, now easier!</i></h2>\n                            <p id=\"title2\"><i>Send recurring mails at the click of a button </i></p>\n\n                            {currentUser ? (\n                                \n                                    <Button variant=\"outlined\" id=\"contbtn\" endIcon={<ArrowForwardIosIcon />} href=\"/dashboard\">\n                                        Continue\n                                    </Button>                                \n                            ) : (                                \n                                    <Button variant=\"contained\" id=\"loginbtn\" onClick={openModal}>\n                                        Login /Signup\n                                    </Button>     \n                                                            \n                            )}\n                            {error? <div>{error}</div> : \"\"}\n\n                        </div>\n\n                    </Grid>\n                    <Grid item xs={4}>\n                        <img src={mail} style={{ height: \"25rem\" }} alt=\"\" />\n                    </Grid>\n                </Grid>\n\n            </Container>\n\n            <Modal isOpen={modalIsOpen} onRequestClose={closeModal} contentLabel=\"My dialog\" className=\"myLmodal\" overlayClassName=\"myLoverlay\"   >\n                {/* () => history.push(\"/home\") */}\n                <Container fixed>\n\n                    {/* HEADER */}\n                    <Grid container>\n                        <Grid item lg={2} sm={2}>\n                            <p onClick={closeModal}>\n                                <IconButton aria-label=\"delete\" >\n                                    <ArrowBackIosIcon style={{ color: \"#3EBDF1\" }} />\n                                </IconButton>\n                            </p>\n                        </Grid>\n                        <Grid item lg={10} sm={6}>\n                            <AppBar position=\"static\" className={classes.root}>\n                                <Tabs value={value}\n\n                                    onChange={handleChange}\n                                    aria-label=\"simple tabs example\"\n                                    indicatorColor=\"primary\"\n                                    textColor=\"primary\"\n                                    centered>\n                                    <Tab label=\"Login\" {...a11yProps(0)} />\n                                    <Tab label=\"Signup\" {...a11yProps(1)} />\n\n                                </Tabs>\n                            </AppBar>\n                        </Grid>\n                    </Grid>\n\n                    \n                     \n                    <TabPanel value={value} index={0}>\n                        <form className={classes.form} noValidate>\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                                value={email}\n                                autoFocus\n                                onChange={Echange}\n                            />\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                                value={pass}\n                                onChange={Pchange}\n                            />\n\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}\n                                onClick={loginHandle}\n                                 \n                            >\n                                LogIn\n                            </Button>\n                            <p className=\"or\">-OR-</p>\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}\n                                onClick={clickhandler}\n                                style={{ height: \"3rem\" }}\n                            >\n\n                                <i class=\"fab fa-google\" style={{ fontSize: \"1.5rem\", marginRight: \".5rem\" }} ></i>\n                                Continue with google\n                            </Button>\n\n\n                        </form>\n                    </TabPanel>\n                    <TabPanel value={value} index={1}>\n                        <form className={classes.form} noValidate>\n                        <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"Name\"\n                                label=\"Name\"\n                                name=\"Name\"\n                                autoComplete=\"Name\"\n                                value={name}\n                                autoFocus\n                                onChange={Nchange}\n                            />\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                                value={email}\n                                \n                                onChange={Echange}\n                            />\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                                value={pass}\n                                onChange={Pchange}\n                            />\n\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}\n                                onClick={signupHandle}\n                            >\n                                Signup\n                            </Button>\n                            <p className=\"or\">-OR-</p>\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}\n                                onClick={clickhandler}\n                                style={{ height: \"3rem\" }}\n                            >\n\n                                <i class=\"fab fa-google\" style={{ fontSize: \"1.5rem\", marginRight: \".5rem\" }} ></i>\n                                Continue with google\n                            </Button>\n\n                        </form>\n                    </TabPanel>\n\n                </Container>\n\n            </Modal>\n\n        </div>\n    );\n}\n\nexport default Landing;","import React, { useState, useEffect } from \"react\";\r\nimport Navbar from \"../../components/navbar/navbar\";\r\nimport { Container, Card, Button, Grid } from \"@material-ui/core/\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@material-ui/core/Box';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\n\r\nimport \"./dashboard.css\";\r\nimport { getDefaultNormalizer } from \"@testing-library/react\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`nav-tabpanel-${index}`}\r\n      aria-labelledby={`nav-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `nav-tab-${index}`,\r\n    'aria-controls': `nav-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction LinkTab(props) {\r\n  return (\r\n    <Tab\r\n      component=\"a\"\r\n      onClick={(event) => {\r\n        event.preventDefault();\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: \"-1rem\"\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: \"#3EBDF1\",\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop: \"1rem\",\r\n    backgroundColor: \"#3EBDF1\",\r\n    boxShadow: 'none',\r\n    color: \"white\",\r\n    fontSize: \"5rem\"\r\n\r\n  },\r\n}));\r\n\r\nfunction Dashboard() {\r\n  const [value, setValue] = useState(0);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [selectedId, setSelectedId] = React.useState(\"\")\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const history = useHistory()\r\n  const {currentUser } = useAuth();\r\n  const [mails, setMails] = useState(\"\")\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (currentUser){\r\n      fetch('https://mailman-backend.herokuapp.com/mails', {\r\n      method: 'GET', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'sender': currentUser.email\r\n      }\r\n    })\r\n      .then(response => response.json()).then(data => {\r\n        console.log(data);\r\n\r\n        setMails(data);\r\n        setIsLoading(false)\r\n      })\r\n      .catch(err => { console.log(err) })\r\n    }else{\r\n      history.push('/')\r\n    }\r\n    \r\n  }, [])\r\n\r\n  \r\n\r\n const reload =()=>{\r\n  fetch('https://mailman-backend.herokuapp.com/mails', {\r\n    method: 'GET', // or 'PUT'\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'sender': currentUser.email\r\n    }\r\n  })\r\n    .then(response => response.json()).then(data => {\r\n      console.log(data);\r\n\r\n      setMails(data);\r\n      setIsLoading(false)\r\n    })\r\n    .catch(err => { console.log(err) })\r\n }\r\n  const handleClick = (id) => {\r\n    if (selectedId === id) {\r\n      setSelectedId(\"\")\r\n      setOpen(false)\r\n    } else {\r\n      setSelectedId(id)\r\n      setOpen(true)\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n  const editMail = (id) => {\r\n    fetch(`https://mailman-backend.herokuapp.com/mails/${id}`, {\r\n      method: 'GET', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      }\r\n    })\r\n      .then(response => response.json()).then(data => {\r\n        console.log(data);\r\n        // setSMail(data) \r\n        // console.log(sMail)  \r\n        history.push({\r\n          pathname: '/editMail',\r\n          state: data\r\n        });\r\n      })\r\n      .catch(err => { console.log(err) })\r\n  }\r\nconst delMail =(id) =>{\r\n  fetch(`https://mailman-backend.herokuapp.com/mails/${id}`, {\r\n      method: 'DELETE', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      }\r\n    })\r\n      .then(response => response.json()).then(data => {\r\n        console.log(data);\r\n        alert(data.message)\r\n        reload()\r\n      })\r\n      .catch(err => { console.log(err) })\r\n\r\n}\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  return (\r\n    <div>\r\n      <Navbar page=\"dashboard\" />\r\n      <Container>\r\n        <Card style={{ paddingT: \"2rem 0\" }}>\r\n          <AppBar position=\"static\" className={classes.root}>\r\n            <Tabs\r\n              variant=\"fullWidth\"\r\n              value={value}\r\n              onChange={handleChange}\r\n              indicatorColor=\"primary\"\r\n              aria-label=\"nav tabs example\"\r\n            >\r\n              <LinkTab label=\"Scheduled Mails\" style={{ fontSize: \"1.3rem\" }} href=\"/drafts\" {...a11yProps(0)} />\r\n              <LinkTab label=\"Mails Sent\" style={{ fontSize: \"1.3rem\" }} href=\"/trash\" {...a11yProps(1)} />\r\n\r\n            </Tabs>\r\n          </AppBar>\r\n          <TabPanel value={value} index={0}>\r\n            {!isLoading && mails.map((mail) => (\r\n              <List component=\"nav\" >\r\n                <ListItem button onClick={() => { handleClick(mail._id) }}>\r\n                  <ListItemText\r\n                    secondary={\r\n                      <React.Fragment>\r\n                        <Grid container>\r\n                          <Grid item xs={3} className={`${open ? '' : 'limit'}`}>\r\n                            <Typography\r\n                              component=\"span\"\r\n                              color=\"textPrimary\"\r\n                            >\r\n                              To:\r\n                            </Typography>\r\n                            {mail.to.map((rec) => (\r\n                              ` ${rec},   `\r\n                            ))}\r\n                          </Grid>\r\n                          <Grid item xs={7} className={`${open ? '' : 'limit'}`}>\r\n                            <Typography\r\n                              component=\"span\"\r\n                              color=\"textPrimary\">\r\n                              Subject:\r\n                            </Typography>\r\n                            {\" \"}{mail.subject}\r\n\r\n                          </Grid>\r\n                          <Grid item xs={2}>\r\n                            <Typography\r\n                              component=\"span\"\r\n                              color=\"textPrimary\">\r\n                              Type:\r\n                            </Typography>\r\n                            {\" \"}{mail.type}\r\n\r\n                          </Grid>\r\n                        </Grid>\r\n                      </React.Fragment>\r\n                    }\r\n                  />\r\n\r\n                  {open ? <ExpandLess /> : <ExpandMore />}\r\n\r\n                </ListItem>\r\n                <Collapse in={mail._id === selectedId} timeout=\"auto\" unmountOnExit>\r\n                  <List component=\"div\" disablePadding>\r\n\r\n\r\n                    <ListItemText >\r\n                      <Container>\r\n                        <Grid container className=\"collp\">\r\n                          <Grid item lg={8} xs={6}>\r\n                            <Typography\r\n                              component=\"span\"\r\n                              color=\"textPrimary\"\r\n                            >\r\n                              CC:\r\n                            </Typography>\r\n                            {mail.cc.map((rec) => (\r\n                              ` ${rec},`\r\n                            ))}\r\n                            \r\n                          </Grid>\r\n                          <Grid item lg={4} xs={6}>\r\n                            <Button variant=\"outlined\" id=\"editbtn\" onClick={() => { editMail(mail._id) }} endIcon={<EditIcon />}>\r\n                              Edit Mail\r\n                            </Button>\r\n                            <Button variant=\"outlined\" id=\"delbtn\" color=\"secondary\" endIcon={<DeleteIcon />} onClick={()=>{delMail(mail._id)}}>\r\n                              Delete Mail\r\n                            </Button>\r\n\r\n\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Typography\r\n                              component=\"span\"\r\n                              color=\"textPrimary\"\r\n                            >\r\n                              BCC:\r\n                            </Typography>\r\n                            {mail.bcc.map((rec) => (\r\n                              ` ${rec},`\r\n                            ))}\r\n\r\n                        <Card style={{ padding: \"2rem \" }}>\r\n                          {mail.body}\r\n                        </Card>\r\n\r\n                      </Container>\r\n                    </ListItemText>\r\n\r\n                  </List>\r\n                </Collapse>\r\n              </List>\r\n            ))}\r\n\r\n          </TabPanel>\r\n          <TabPanel value={value} index={1}>\r\n          {!isLoading && mails.map((mail) => (\r\n            mail.last_sent != \"\" ?(\r\n              <List component=\"nav\" >\r\n                <ListItem button onClick={() => { handleClick(mail._id) }}>\r\n                  <ListItemText\r\n                    secondary={\r\n                      <React.Fragment>\r\n                        <Grid container>\r\n                          <Grid item xs={3} className={`${open ? '' : 'limit'}`}>\r\n                            <Typography\r\n                              component=\"span\"\r\n                              color=\"textPrimary\"\r\n                            >\r\n                              To:\r\n                            </Typography>\r\n                            {mail.to.map((rec) => (\r\n                              ` ${rec},   `\r\n                            ))}\r\n                          </Grid>\r\n                          <Grid item xs={7} className={`${open ? '' : 'limit'}`}>\r\n                            <Typography\r\n                              component=\"span\"\r\n                              color=\"textPrimary\">\r\n                              Subject:\r\n                            </Typography>\r\n                            {\" \"}{mail.subject}\r\n\r\n                          </Grid>\r\n                          <Grid item xs={2}>\r\n                            <Typography\r\n                              component=\"span\"\r\n                              color=\"textPrimary\">\r\n                              Type:\r\n                            </Typography>\r\n                            {\" \"}{mail.type}\r\n\r\n                          </Grid>\r\n                        </Grid>\r\n                      </React.Fragment>\r\n                    }\r\n                  />\r\n\r\n                  {open ? <ExpandLess /> : <ExpandMore />}\r\n\r\n                </ListItem>\r\n                <Collapse in={mail._id === selectedId} timeout=\"auto\" unmountOnExit>\r\n                  <List component=\"div\" disablePadding>\r\n\r\n\r\n                    <ListItemText >\r\n                      <Container>\r\n                        <Grid container className=\"collp\">\r\n                          <Grid item lg={4} xs={6}>\r\n                            <Typography\r\n                              component=\"span\"\r\n                              color=\"textPrimary\"\r\n                            >\r\n                              CC:\r\n                            </Typography>\r\n                            {mail.cc.map((rec) => (\r\n                              ` ${rec},`\r\n                            ))}\r\n                            \r\n                          </Grid>\r\n                          <Grid item lg={4} xs={6}>\r\n                            <Typography\r\n                              component=\"span\"\r\n                              color=\"textPrimary\"\r\n                            >\r\n                              BCC:\r\n                            </Typography>\r\n                            {mail.bcc.map((rec) => (\r\n                              ` ${rec},`\r\n                            ))}\r\n                            {/* <Button variant=\"outlined\" id=\"editbtn\" onClick={() => { editMail(mail._id) }} endIcon={<EditIcon />}>\r\n                              Edit Mail\r\n                            </Button>\r\n                            <Button variant=\"outlined\" id=\"delbtn\" color=\"secondary\" endIcon={<DeleteIcon />} onClick={()=>{delMail(mail._id)}}>\r\n                              Delete Mail\r\n                            </Button> */}\r\n\r\n\r\n                          </Grid>\r\n                          <Grid item lg={4} xs={6}>\r\n                            <Typography\r\n                              component=\"span\"\r\n                              color=\"textPrimary\"\r\n                            >\r\n                              Last Sent:\r\n                            </Typography>\r\n                            {\" \"}{mail.last_sent}\r\n                            \r\n                          </Grid>\r\n                        </Grid>\r\n                        \r\n\r\n                        <Card style={{ padding: \"2rem \" }}>\r\n                          {mail.body}\r\n                        </Card>\r\n\r\n                      </Container>\r\n                    </ListItemText>\r\n\r\n                  </List>\r\n                </Collapse>\r\n              </List>) : null\r\n            ))}\r\n            \r\n          </TabPanel>\r\n\r\n\r\n        </Card>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import { AuthProvider } from \"./contexts/AuthContext\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport LogIn from \"./components/login/LogIn\";\nimport \"./App.css\";\nimport CreateMail from \"./pages/createMail/createMail\";\nimport editMail from \"./pages/editMail/editMail\";\n\nimport Landing from \"./pages/landingPage/Landing\";\nimport Dashboard from \"./pages/dashboard/dashboard\";\n\n\n\n\nfunction App() {\n  \n  return (\n    <AuthProvider>\n      <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Landing} />            \n            <Route path=\"/createMail\" component={CreateMail}/>\n            <Route path=\"/dashboard\" component= {Dashboard} />\n            <Route path=\"/editMail\" component= {editMail} />\n          </Switch>\n        </Router>     \n        \n    </AuthProvider>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}